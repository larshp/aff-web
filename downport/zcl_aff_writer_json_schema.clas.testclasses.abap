CLASS ltcl_json_writer DEFINITION FINAL FOR TESTING
  DURATION SHORT
  RISK LEVEL HARMLESS.

  PRIVATE SECTION.
    CONSTANTS:
      schema_id TYPE string VALUE 'schema/id.json'.

    DATA:
      cut            TYPE REF TO zcl_aff_writer_json_schema,
      test_generator TYPE REF TO zcl_aff_generator.

    METHODS: use_ddic_info_for_element FOR TESTING RAISING cx_static_check,
      date_time_element FOR TESTING RAISING cx_static_check,
      structure_in_table FOR TESTING RAISING cx_static_check,
      nested_table FOR TESTING RAISING cx_static_check,
      use_ddic_info_for_max_length FOR TESTING RAISING cx_static_check,
      max_length FOR TESTING RAISING cx_static_check,
      number_max_value FOR TESTING RAISING cx_static_check,
      enum_element FOR TESTING RAISING cx_static_check,
      date_time_from_abap_to_json FOR TESTING RAISING cx_static_check,
      validate_invalid_json_schema FOR TESTING RAISING cx_static_check,
      validate_valid_json_schema FOR TESTING RAISING cx_static_check,
      nested_boolean FOR TESTING RAISING cx_static_check,
      setup.

ENDCLASS.

CLASS zcl_aff_writer_json_schema DEFINITION LOCAL FRIENDS ltcl_json_writer.

CLASS ltcl_json_writer IMPLEMENTATION.

  METHOD setup.
    CREATE OBJECT cut TYPE zcl_aff_writer_json_schema EXPORTING SCHEMA_ID = schema_id.
    CREATE OBJECT test_generator TYPE zcl_aff_generator EXPORTING WRITER = cut.
  ENDMETHOD.

  METHOD enum_element.
*  base type / base structure/ ohne (integer)
*  ABAP enums are not supported and hence treated as string with maxLength 30
    TYPES category TYPE string.
    CONSTANTS: BEGIN OF undefined,
             general TYPE category VALUE '1',
             classic_badi TYPE category VALUE '2',
           END OF undefined.

    DATA temp44 TYPE category.
    DATA act_schema TYPE string_table.
    DATA temp45 TYPE string_table.
    DATA temp30 LIKE LINE OF temp45.
    DATA temp31 LIKE LINE OF temp45.
    DATA temp32 LIKE LINE OF temp45.
    DATA temp53 LIKE LINE OF temp45.
    DATA exp_schema LIKE temp45.
    CLEAR temp44.

    act_schema = test_generator->generate_type( temp44 ).


    CLEAR temp45.
    APPEND `{` TO temp45.

    temp30 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp30 TO temp45.

    temp31 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp31 TO temp45.

    temp32 = |    "$id": "{ schema_id }",|.
    APPEND temp32 TO temp45.
    APPEND `    "type": "string",` TO temp45.
    APPEND `    "maxLength": 30` TO temp45.
    APPEND `}` TO temp45.

    APPEND temp53 TO temp45.

    exp_schema = temp45.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD date_time_element.
    DATA temp54 TYPE d.
    DATA act_schema TYPE string_table.
    DATA temp55 TYPE string_table.
    DATA temp33 LIKE LINE OF temp55.
    DATA temp34 LIKE LINE OF temp55.
    DATA temp35 LIKE LINE OF temp55.
    DATA temp63 LIKE LINE OF temp55.
    DATA exp_schema LIKE temp55.
    CLEAR temp54.

    act_schema = test_generator->generate_type( temp54 ).


    CLEAR temp55.
    APPEND `{` TO temp55.

    temp33 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp33 TO temp55.

    temp34 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp34 TO temp55.

    temp35 = |    "$id": "{ schema_id }",|.
    APPEND temp35 TO temp55.
    APPEND `    "type": "string",` TO temp55.
    APPEND `    "format" :"date-time"` TO temp55.
    APPEND `}` TO temp55.

    APPEND temp63 TO temp55.

    exp_schema = temp55.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD use_ddic_info_for_element.
    DATA temp64 TYPE abap_language_version.
    DATA act_schema TYPE string_table.
    DATA temp65 TYPE string_table.
    DATA temp36 LIKE LINE OF temp65.
    DATA temp37 LIKE LINE OF temp65.
    DATA temp38 LIKE LINE OF temp65.
    DATA temp83 LIKE LINE OF temp65.
    DATA exp_schema LIKE temp65.
    CLEAR temp64.

    act_schema = test_generator->generate_type( temp64 ).


    CLEAR temp65.
    APPEND `{` TO temp65.

    temp36 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp36 TO temp65.

    temp37 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp37 TO temp65.

    temp38 = |    "$id": "{ schema_id }",|.
    APPEND temp38 TO temp65.
    APPEND `    "description": "ABAP Language Version",` TO temp65.
    APPEND `    "type": "string",` TO temp65.
    APPEND `    "enum": [` TO temp65.
    APPEND `      "standardAbap",` TO temp65.
    APPEND `      "abapForKeyUsers",` TO temp65.
    APPEND `      "abapForCloudDevelopment"` TO temp65.
    APPEND `    ],` TO temp65.
    APPEND `    "enumDescriptions": [` TO temp65.
    APPEND `      "StandardABAP",` TO temp65.
    APPEND `      "ABAP for Key Users",` TO temp65.
    APPEND `      "ABAP for Cloud Development"` TO temp65.
    APPEND `    ]` TO temp65.
    APPEND `}` TO temp65.

    APPEND temp83 TO temp65.

    exp_schema = temp65.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD use_ddic_info_for_max_length.
    DATA temp84 TYPE sysuuid_c36.
    DATA act_schema TYPE string_table.
    DATA temp85 TYPE string_table.
    DATA temp39 LIKE LINE OF temp85.
    DATA temp40 LIKE LINE OF temp85.
    DATA temp41 LIKE LINE OF temp85.
    DATA temp94 LIKE LINE OF temp85.
    DATA exp_schema LIKE temp85.
    CLEAR temp84.

    act_schema = test_generator->generate_type( temp84 ).


    CLEAR temp85.
    APPEND `{` TO temp85.

    temp39 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp39 TO temp85.

    temp40 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp40 TO temp85.

    temp41 = |    "$id": "{ schema_id }",|.
    APPEND temp41 TO temp85.
    APPEND `    "description": "16 byte UUID in 36 chars according to RFC4122",` TO temp85.
    APPEND `    "type": "string",` TO temp85.
    APPEND `    "maxLength": 36` TO temp85.
    APPEND `}` TO temp85.

    APPEND temp94 TO temp85.

    exp_schema = temp85.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD structure_in_table.
    TYPES:
      BEGIN OF my_structure,
        my_element TYPE string,
      END OF my_structure,
      my_table TYPE STANDARD TABLE OF my_structure WITH DEFAULT KEY.

    DATA temp95 TYPE my_table.
    DATA act_schema TYPE string_table.
    DATA temp96 TYPE string_table.
    DATA temp42 LIKE LINE OF temp96.
    DATA temp43 LIKE LINE OF temp96.
    DATA temp44 LIKE LINE OF temp96.
    DATA temp112 LIKE LINE OF temp96.
    DATA exp_schema LIKE temp96.
    CLEAR temp95.

    act_schema = test_generator->generate_type( temp95 ).


    CLEAR temp96.
    APPEND `{` TO temp96.

    temp42 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp42 TO temp96.

    temp43 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp43 TO temp96.

    temp44 = |    "$id": "{ schema_id }",|.
    APPEND temp44 TO temp96.
    APPEND `    "type": "array",` TO temp96.
    APPEND `    "items": {` TO temp96.
    APPEND `        "type": "object",` TO temp96.
    APPEND `        "properties": {` TO temp96.
    APPEND `            "myElement": {` TO temp96.
    APPEND `                "type": "string"` TO temp96.
    APPEND `            }` TO temp96.
    APPEND `        },` TO temp96.
    APPEND `        "additionalProperties": false` TO temp96.
    APPEND `    }` TO temp96.
    APPEND `}` TO temp96.

    APPEND temp112 TO temp96.

    exp_schema = temp96.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD nested_boolean.
    TYPES:
      BEGIN OF ty_personalization,
        hide_column TYPE abap_bool,
      END OF ty_personalization,
      BEGIN OF ty_list_report,
        hide_column TYPE ty_personalization-hide_column,
      END OF ty_list_report.

    DATA temp113 TYPE ty_list_report.
    DATA act_schema TYPE string_table.
    DATA temp114 TYPE string_table.
    DATA temp45 LIKE LINE OF temp114.
    DATA temp46 LIKE LINE OF temp114.
    DATA temp47 LIKE LINE OF temp114.
    DATA temp127 LIKE LINE OF temp114.
    DATA exp_schema LIKE temp114.
    CLEAR temp113.

    act_schema = test_generator->generate_type( temp113 ).


    CLEAR temp114.
    APPEND `{` TO temp114.

    temp45 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp45 TO temp114.

    temp46 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp46 TO temp114.

    temp47 = |    "$id": "{ schema_id }",|.
    APPEND temp47 TO temp114.
    APPEND `    "type": "object",` TO temp114.
    APPEND `    "properties": {` TO temp114.
    APPEND `        "hideColumn": {` TO temp114.
    APPEND `            "type": "boolean"` TO temp114.
    APPEND `        }` TO temp114.
    APPEND `    },` TO temp114.
    APPEND `    "additionalProperties": false` TO temp114.
    APPEND `}` TO temp114.

    APPEND temp127 TO temp114.

    exp_schema = temp114.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD nested_table.
    TYPES:
      nested_table TYPE STANDARD TABLE OF string WITH DEFAULT KEY,
      first_table  TYPE STANDARD TABLE OF nested_table WITH DEFAULT KEY.

    DATA temp128 TYPE first_table.
    DATA act_schema TYPE string_table.
    DATA temp129 TYPE string_table.
    DATA temp48 LIKE LINE OF temp129.
    DATA temp49 LIKE LINE OF temp129.
    DATA temp50 LIKE LINE OF temp129.
    DATA temp142 LIKE LINE OF temp129.
    DATA exp_schema LIKE temp129.
    CLEAR temp128.

    act_schema = test_generator->generate_type( temp128 ).


    CLEAR temp129.
    APPEND `{` TO temp129.

    temp48 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp48 TO temp129.

    temp49 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp49 TO temp129.

    temp50 = |    "$id": "{ schema_id }",|.
    APPEND temp50 TO temp129.
    APPEND `    "type": "array",` TO temp129.
    APPEND `    "items": {` TO temp129.
    APPEND `        "type": "array",` TO temp129.
    APPEND `        "items": {` TO temp129.
    APPEND `            "type": "string"` TO temp129.
    APPEND `        }` TO temp129.
    APPEND `    }` TO temp129.
    APPEND `}` TO temp129.

    APPEND temp142 TO temp129.

    exp_schema = temp129.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD max_length.
    TYPES:
      BEGIN OF component_description,
        name         TYPE c LENGTH 30,
        description  TYPE c LENGTH 60,
        numeric_text TYPE n LENGTH 10,
      END OF component_description.
    DATA temp143 TYPE component_description.
    DATA act_schema TYPE string_table.
    DATA temp144 TYPE string_table.
    DATA temp51 LIKE LINE OF temp144.
    DATA temp52 LIKE LINE OF temp144.
    DATA temp53 LIKE LINE OF temp144.
    DATA temp167 LIKE LINE OF temp144.
    DATA exp_schema LIKE temp144.
    CLEAR temp143.

    act_schema = test_generator->generate_type( temp143 ).


    CLEAR temp144.
    APPEND `{` TO temp144.

    temp51 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp51 TO temp144.

    temp52 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp52 TO temp144.

    temp53 = |    "$id": "{ schema_id }",|.
    APPEND temp53 TO temp144.
    APPEND `    "type": "object",` TO temp144.
    APPEND `    "properties": {` TO temp144.
    APPEND `        "name": {` TO temp144.
    APPEND `            "type": "string",` TO temp144.
    APPEND `            "maxLength": 30` TO temp144.
    APPEND `        },` TO temp144.
    APPEND `        "description": {` TO temp144.
    APPEND `            "type": "string",` TO temp144.
    APPEND `            "maxLength": 60` TO temp144.
    APPEND `        },` TO temp144.
    APPEND `        "numericText": {` TO temp144.
    APPEND `            "type": "string",` TO temp144.
    APPEND `            "maxLength": 10,` TO temp144.
    APPEND `            "pattern": "^[0-9]+$" ` TO temp144.
    APPEND `        }` TO temp144.
    APPEND `    },` TO temp144.
    APPEND `    "additionalProperties": false` TO temp144.
    APPEND `}` TO temp144.

    APPEND temp167 TO temp144.

    exp_schema = temp144.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD number_max_value.
    TYPES:
      BEGIN OF component_description,
        integer    TYPE i, "-2147483648 to +2147483647 for i
        integer8   TYPE int8, "-9,223,372,036,854,775,808 to +9,223,372,036,854,775,807 for int8
        decfloat16 TYPE decfloat16, "1E385(1E-16 - 1) to -1E-383, 0, +1E-383 to 1E385(1 - 1E-16) for decfloat16
        decfloat34 TYPE decfloat34, "1E6145(1E-34 - 1) to -1E-6143, 0, +1E-6143 to 1E6145(1 - 1E-34) for decfloat34
        ftype      TYPE f, "2.2250738585072014E-308 to 1.7976931348623157E+308, positive as well as negative
        packed     TYPE p LENGTH 14 DECIMALS 2, "length multiplied by 2 minus 1 digits and can have a maximum of 14 decimal places
        integer2   TYPE int2,
      END OF component_description.
    DATA temp168 TYPE component_description.
    DATA act_schema TYPE string_table.
    DATA temp169 TYPE string_table.
    DATA temp54 LIKE LINE OF temp169.
    DATA temp55 LIKE LINE OF temp169.
    DATA temp56 LIKE LINE OF temp169.
    DATA temp216 LIKE LINE OF temp169.
    DATA exp_schema LIKE temp169.
    CLEAR temp168.

    act_schema = test_generator->generate_type( temp168 ).



    CLEAR temp169.
    APPEND `{` TO temp169.

    temp54 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp54 TO temp169.

    temp55 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp55 TO temp169.

    temp56 = |    "$id": "{ schema_id }",|.
    APPEND temp56 TO temp169.
    APPEND `    "type": "object",` TO temp169.
    APPEND `    "properties": {` TO temp169.
    APPEND `        "integer": {` TO temp169.
    APPEND `            "type": "integer",` TO temp169.
    APPEND `            "minimum": -2147483648,` TO temp169.
    APPEND `            "maximum": 2147483647` TO temp169.
    APPEND `        },` TO temp169.
    APPEND `        "integer8": {` TO temp169.
    APPEND `            "type": "integer",` TO temp169.
    APPEND `            "minimum": -9223372036854775808,` TO temp169.
    APPEND `            "maximum": 9223372036854775807` TO temp169.
    APPEND `        },` TO temp169.
    APPEND `        "decfloat16": {` TO temp169.
    APPEND `            "type": "number",` TO temp169.
    APPEND `            "minimum": -9.999999999999999e384,` TO temp169.
    APPEND `            "maximum": 9.999999999999999e384` TO temp169.
    APPEND `        },` TO temp169.
    APPEND `        "decfloat34": {` TO temp169.
    APPEND `            "type": "number",` TO temp169.
    APPEND `            "minimum": -9.999999999999999999999999999999999e6144,` TO temp169.
    APPEND `            "maximum": 9.999999999999999999999999999999999e6144` TO temp169.
    APPEND `        },` TO temp169.
    APPEND `        "ftype": {` TO temp169.
    APPEND `            "type": "number",` TO temp169.
    APPEND `            "minimum": -1.7976931348623157e308,` TO temp169.
    APPEND `            "maximum": 1.7976931348623157e308` TO temp169.
    APPEND `        },` TO temp169.
    APPEND `        "packed": {` TO temp169.
    APPEND `            "type": "number",` TO temp169.
    APPEND `            "minimum": -9999999999999999999999999.99,` TO temp169.
    APPEND `            "maximum": 9999999999999999999999999.99,` TO temp169.
    APPEND `            "multipleOf": 0.01` TO temp169.
    APPEND `        },` TO temp169.
    APPEND `        "integer2": {` TO temp169.
    APPEND `            "description": "2ByteSignedInteger",` TO temp169.
    APPEND `            "type": "integer",` TO temp169.
    APPEND `            "minimum": -32768,` TO temp169.
    APPEND `            "maximum": 32767` TO temp169.
    APPEND `        }` TO temp169.
    APPEND `    },` TO temp169.
    APPEND `    "additionalProperties": false` TO temp169.
    APPEND `}` TO temp169.

    APPEND temp216 TO temp169.

    exp_schema = temp169.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.


  METHOD date_time_from_abap_to_json.
    DATA abap_date TYPE string.
    DATA temp217 TYPE d.
    DATA temp57 TYPE REF TO cl_abap_elemdescr.
    DATA element_description LIKE temp57.
    DATA exp_json TYPE string.
    DATA act_json TYPE string.
    DATA abap_date_year TYPE string.
    DATA abap_date_year_month TYPE string.
    DATA abap_time TYPE string.
    DATA temp218 TYPE t.
    DATA temp58 TYPE REF TO cl_abap_elemdescr.
    DATA abap_time_incomplete TYPE string.
    DATA abap_utclong TYPE string.
    DATA temp219 TYPE utclong.
    DATA temp59 TYPE REF TO cl_abap_elemdescr.
    abap_date = `"20121221"`.

    CLEAR temp217.

    temp57 ?= cl_abap_typedescr=>describe_by_data( temp217 ).

    element_description = temp57.

    exp_json = `2012-12-21`.

    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_date
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_date_year = `"2012"`.
    exp_json = `2012`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_date_year
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_date_year_month = `"201212"`.
    exp_json = `2012-12`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_date_year_month
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_time = `"201500"`.

    CLEAR temp218.

    temp58 ?= cl_abap_typedescr=>describe_by_data( temp218 ).
    element_description = temp58.
    exp_json = `20:15:00`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_time
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_time_incomplete = `"2015"`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_time_incomplete
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).


    abap_utclong = `"2012-12-21T23:59:59.9999999"`.

    CLEAR temp219.

    temp59 ?= cl_abap_typedescr=>describe_by_data( temp219 ).
    element_description = temp59.
    exp_json = `2012-12-21T23:59:59+00:00`.
    act_json = cut->date_time_from_abap_to_json(
      date_time_abap      = abap_utclong
      element_description = element_description ).
    cl_abap_unit_assert=>assert_equals( exp = exp_json act = act_json ).
  ENDMETHOD.

  METHOD validate_invalid_json_schema.
    DATA temp220 TYPE string_table.
    DATA temp60 LIKE LINE OF temp220.
    DATA temp61 LIKE LINE OF temp220.
    DATA temp62 LIKE LINE OF temp220.
    DATA invalid_json_schema LIKE temp220.
    DATA log TYPE REF TO zif_aff_log.
    DATA is_valid TYPE abap_bool.
    CLEAR temp220.
    APPEND `{` TO temp220.

    temp60 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp60 TO temp220.

    temp61 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp61 TO temp220.

    temp62 = |    "$id": "{ schema_id }",|.
    APPEND temp62 TO temp220.
    APPEND `    "type": "object",` TO temp220.
    APPEND `    "properties": {` TO temp220.
    APPEND `        "name": {` TO temp220.
    APPEND `            "type": "string",` TO temp220.
    APPEND `            "maxLength": 30` TO temp220.
    APPEND `        }` TO temp220.
    APPEND `        "description": {` TO temp220.
    APPEND `            "type": "string",` TO temp220.
    APPEND `            "maxLength": 60` TO temp220.
    APPEND `        }` TO temp220.
    APPEND `    }` TO temp220.
    APPEND `}` TO temp220.

    invalid_json_schema = temp220.


    log = cut->zif_aff_writer~get_log( ).

    is_valid = cut->zif_aff_writer~validate( source = invalid_json_schema log = log ).

    cl_abap_unit_assert=>assert_false( is_valid ).
    cl_abap_unit_assert=>assert_true( log->has_messages( ) ).
  ENDMETHOD.

  METHOD validate_valid_json_schema.
    DATA temp237 TYPE string_table.
    DATA temp63 LIKE LINE OF temp237.
    DATA temp64 LIKE LINE OF temp237.
    DATA temp65 LIKE LINE OF temp237.
    DATA invalid_json_schema LIKE temp237.
    DATA log TYPE REF TO zif_aff_log.
    DATA is_valid TYPE abap_bool.
    CLEAR temp237.
    APPEND `{` TO temp237.

    temp63 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp63 TO temp237.

    temp64 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp64 TO temp237.

    temp65 = |    "$id": "{ schema_id }",|.
    APPEND temp65 TO temp237.
    APPEND `    "type": "object",` TO temp237.
    APPEND `    "properties": {` TO temp237.
    APPEND `        "name": {` TO temp237.
    APPEND `            "type": "string",` TO temp237.
    APPEND `            "maxLength": 30` TO temp237.
    APPEND `        },` TO temp237.
    APPEND `        "description": {` TO temp237.
    APPEND `            "type": "string",` TO temp237.
    APPEND `            "maxLength": 60` TO temp237.
    APPEND `        }` TO temp237.
    APPEND `    }` TO temp237.
    APPEND `}` TO temp237.

    invalid_json_schema = temp237.


    log = cut->zif_aff_writer~get_log( ).

    is_valid = cut->zif_aff_writer~validate( source = invalid_json_schema log = log ).

    cl_abap_unit_assert=>assert_true( is_valid ).
    cl_abap_unit_assert=>assert_false( log->has_messages( ) ).
  ENDMETHOD.

ENDCLASS.

CLASS ltcl_json_writer_abap_doc DEFINITION FINAL FOR TESTING
  DURATION MEDIUM
  RISK LEVEL HARMLESS.
  PRIVATE SECTION.
    CONSTANTS:
        schema_id TYPE string VALUE 'schema/id.json'.
    DATA cut TYPE REF TO zcl_aff_writer_json_schema.
    DATA test_generator TYPE REF TO zcl_aff_generator.
    DATA log TYPE REF TO zif_aff_log.

    METHODS setup.

    METHODS: structure_with_different_enum FOR TESTING RAISING cx_static_check,
      standard_table FOR TESTING RAISING cx_static_check,
      nested_structure FOR TESTING RAISING cx_static_check,
      simple_structure FOR TESTING RAISING cx_static_check,
      simple_structure_single_field FOR TESTING RAISING cx_static_check,
      simple_structure_two_fields FOR TESTING RAISING cx_static_check,
      string_element FOR TESTING RAISING cx_static_check,
      simple_structure_dollar FOR TESTING RAISING cx_static_check,
      complex_type_with_enum FOR TESTING RAISING cx_static_check,
      number_element FOR TESTING RAISING cx_static_check,
      date_time_element FOR TESTING RAISING cx_static_check,
      nested_nested_structure FOR TESTING RAISING cx_static_check,
      table_in_nested_stru_with_ad FOR TESTING RAISING cx_static_check,
      nestes_table_with_ad FOR TESTING RAISING cx_static_check,
      format_version FOR TESTING RAISING cx_static_check,
      structure_with_table FOR TESTING RAISING cx_static_check,
      numerical_text_field FOR TESTING RAISING cx_static_check,
      structure_with_numbers FOR TESTING RAISING cx_static_check,
      structure_different_default FOR TESTING RAISING cx_static_check,
      nested_struc_with_default FOR TESTING RAISING cx_static_check,
      simple_table_with_callbackclas FOR TESTING RAISING cx_static_check,
      struct_with_table_callback FOR TESTING RAISING cx_static_check,
      element_with_callbackclas FOR TESTING RAISING cx_static_check,
      element_in_structure_callback FOR TESTING RAISING cx_static_check,
      table_of_struc_with_callback FOR TESTING RAISING cx_static_check,
      table_with_call_of_struc FOR TESTING RAISING cx_static_check,
      nested_table_with_callback FOR TESTING RAISING cx_static_check,
      struc_with_struc_callback FOR TESTING RAISING cx_static_check,
      structure_with_wrong_enum_link FOR TESTING RAISING cx_static_check,
      structure_with_wrong_default FOR TESTING RAISING cx_static_check,
      structure_with_wrong_callback FOR TESTING RAISING cx_static_check,
      hashed_table FOR TESTING RAISING cx_static_check,
      structure_with_tables FOR TESTING RAISING cx_static_check,
      structure_no_title_descr FOR TESTING RAISING cx_static_check,
      element_no_title_descr FOR TESTING RAISING cx_static_check,
      table_no_title_descr FOR TESTING RAISING cx_static_check,
      title_and_desc_escaped FOR TESTING RAISING cx_static_check,
      number_element_default FOR TESTING RAISING cx_static_check,
      unknown_annotation FOR TESTING RAISING cx_static_check,
      unknown_abap_doc_tag FOR TESTING RAISING cx_static_check,
      type_of_enumtype_and_co_differ FOR TESTING RAISING cx_static_check,
      structure_with_include FOR TESTING RAISING cx_static_check,
      description_too_long FOR TESTING RAISING cx_static_check,
      structure_with_default_problem FOR TESTING RAISING cx_static_check,
      get_extrema_integer FOR TESTING RAISING cx_static_check,
      get_extrema_decfloat16 FOR TESTING RAISING cx_static_check,
      get_extrema_ftype FOR TESTING RAISING cx_static_check,
      get_extrema_packed FOR TESTING RAISING cx_static_check,
      get_extrema_integer1 FOR TESTING RAISING cx_static_check,
      calculate_max_length FOR TESTING RAISING cx_static_check,
      original_description FOR TESTING RAISING cx_static_check,
      struc_with_own_enum_values FOR TESTING RAISING cx_static_check.

ENDCLASS.


CLASS zcl_aff_writer_json_schema DEFINITION LOCAL FRIENDS ltcl_json_writer_abap_doc.
CLASS ltcl_json_writer_abap_doc IMPLEMENTATION.

  METHOD setup.
    CREATE OBJECT cut TYPE zcl_aff_writer_json_schema EXPORTING SCHEMA_ID = schema_id.
    CREATE OBJECT test_generator TYPE zcl_aff_generator EXPORTING WRITER = cut.
  ENDMETHOD.

  METHOD number_element_default.
    DATA temp254 TYPE zcl_aff_test_types=>default_link.
    DATA act_schema TYPE string_table.
    DATA temp255 TYPE string_table.
    DATA temp66 LIKE LINE OF temp255.
    DATA temp67 LIKE LINE OF temp255.
    DATA temp68 LIKE LINE OF temp255.
    DATA temp265 LIKE LINE OF temp255.
    DATA exp_schema LIKE temp255.
    CLEAR temp254.

    act_schema = test_generator->generate_type( temp254 ).
*expect error /no output (type of type and constant has to be the same)


    CLEAR temp255.
    APPEND `{` TO temp255.

    temp66 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp66 TO temp255.

    temp67 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp67 TO temp255.

    temp68 = |    "$id": "{ schema_id }",|.
    APPEND temp68 TO temp255.
    APPEND `    "description": "Default type does not match constant type",` TO temp255.
    APPEND `    "type": "integer",` TO temp255.
    APPEND `    "minimum": -2147483648,` TO temp255.
    APPEND `    "maximum": 2147483647` TO temp255.
    APPEND `}` TO temp255.

    APPEND temp265 TO temp255.

    exp_schema = temp255.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Type of constant CO_TEST does not match type of DEFAULT_LINK`
      exp_component_name = `DEFAULT_LINK`
      exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD original_description.
    DATA temp266 TYPE zcl_aff_test_types=>ty_header_60_src.
    DATA act_schema TYPE string_table.
    DATA temp267 TYPE string_table.
    DATA temp69 LIKE LINE OF temp267.
    DATA temp70 LIKE LINE OF temp267.
    DATA temp71 LIKE LINE OF temp267.
    DATA temp285 LIKE LINE OF temp267.
    DATA exp_schema LIKE temp267.
    CLEAR temp266.

    act_schema = test_generator->generate_type( temp266 ).


    CLEAR temp267.
    APPEND `{` TO temp267.

    temp69 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp69 TO temp267.

    temp70 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp70 TO temp267.

    temp71 = |    "$id": "{ schema_id }",|.
    APPEND temp71 TO temp267.
    APPEND `    "type": "object",` TO temp267.
    APPEND `  "properties": {` TO temp267.
    APPEND `    "originalLanguage": {` TO temp267.
    APPEND `      "title": "Original Language",` TO temp267.
    APPEND `      "description": "Original language of the ABAP object",` TO temp267.
    APPEND `      "type": "string",` TO temp267.
    APPEND `      "minLength": 2,` TO temp267.
    APPEND `      "maxLength": 2,` TO temp267.
    APPEND `      "pattern": "^[a-z]+$"` TO temp267.
    APPEND `    }` TO temp267.
    APPEND `  },` TO temp267.
    APPEND `  "additionalProperties": false` TO temp267.
    APPEND `}` TO temp267.

    APPEND temp285 TO temp267.

    exp_schema = temp267.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
  ENDMETHOD.

  METHOD type_of_enumtype_and_co_differ.
    DATA temp286 TYPE zcl_aff_test_types=>enum.
    TRY.

        CLEAR temp286.
        test_generator->generate_type( temp286 ).
        cl_abap_unit_assert=>fail( ).
      CATCH zcx_aff_tools.
    ENDTRY.
  ENDMETHOD.

  METHOD unknown_annotation.
    DATA temp287 TYPE zcl_aff_test_types=>unknown_annotation.
    DATA act_schema TYPE string_table.
    DATA temp288 TYPE string_table.
    DATA temp72 LIKE LINE OF temp288.
    DATA temp73 LIKE LINE OF temp288.
    DATA temp74 LIKE LINE OF temp288.
    DATA temp295 LIKE LINE OF temp288.
    DATA exp_schema LIKE temp288.
    CLEAR temp287.

    act_schema = test_generator->generate_type( temp287 ).

    "expected: no title or description

    CLEAR temp288.
    APPEND `{` TO temp288.

    temp72 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp72 TO temp288.

    temp73 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp73 TO temp288.

    temp74 = |    "$id": "{ schema_id }",|.
    APPEND temp74 TO temp288.
    APPEND `    "type": "string"` TO temp288.
    APPEND `}` TO temp288.

    APPEND temp295 TO temp288.

    exp_schema = temp288.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Annotation $hiddenabc is unknown`
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `UNKNOWN_ANNOTATION` ).
  ENDMETHOD.

  METHOD unknown_abap_doc_tag.
    "description is not found
    DATA temp296 TYPE zcl_aff_test_types=>description_not_found.
    DATA act_schema TYPE string_table.
    DATA temp297 TYPE string_table.
    DATA temp75 LIKE LINE OF temp297.
    DATA temp76 LIKE LINE OF temp297.
    DATA temp77 LIKE LINE OF temp297.
    DATA temp306 LIKE LINE OF temp297.
    DATA exp_schema LIKE temp297.
    CLEAR temp296.

    act_schema = test_generator->generate_type( temp296 ).

    CLEAR temp297.
    APPEND `{` TO temp297.

    temp75 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp75 TO temp297.

    temp76 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp76 TO temp297.

    temp77 = |    "$id": "{ schema_id }",|.
    APPEND temp77 TO temp297.
    APPEND `    "title": "title",` TO temp297.
    APPEND `    "description": "description <p class=\"shorttext2\">Title</p>",` TO temp297.
    APPEND `    "type": "string"` TO temp297.
    APPEND `}` TO temp297.

    APPEND temp306 TO temp297.

    exp_schema = temp297.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD title_and_desc_escaped.
    DATA temp307 TYPE zcl_aff_test_types=>num_text1.
    DATA act_schema_co TYPE string_table.
    DATA temp308 TYPE string_table.
    DATA temp78 LIKE LINE OF temp308.
    DATA temp79 LIKE LINE OF temp308.
    DATA temp80 LIKE LINE OF temp308.
    DATA temp319 LIKE LINE OF temp308.
    DATA exp_schema LIKE temp308.
    CLEAR temp307.

    act_schema_co = test_generator->generate_type( temp307 ).

    CLEAR temp308.
    APPEND `{` TO temp308.

    temp78 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp78 TO temp308.

    temp79 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp79 TO temp308.

    temp80 = |    "$id": "{ schema_id }",|.
    APPEND temp80 TO temp308.
    APPEND `    "title": "Test title \"\\",` TO temp308.
    APPEND `    "description": "Test description \"\\",` TO temp308.
    APPEND `    "type": "string",` TO temp308.
    APPEND `    "maxLength": 4, ` TO temp308.
    APPEND `    "pattern": "^[0-9]+$"` TO temp308.
    APPEND `}` TO temp308.

    APPEND temp319 TO temp308.

    exp_schema = temp308.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD format_version.
    DATA temp320 TYPE zcl_aff_test_types=>ty_format_version.
    DATA act_schema TYPE string_table.
    DATA temp321 TYPE string_table.
    DATA temp81 LIKE LINE OF temp321.
    DATA temp82 LIKE LINE OF temp321.
    DATA temp83 LIKE LINE OF temp321.
    DATA temp346 LIKE LINE OF temp321.
    DATA exp_schema LIKE temp321.
    CLEAR temp320.

    act_schema = test_generator->generate_type( temp320 ).

    CLEAR temp321.
    APPEND `   {` TO temp321.

    temp81 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp81 TO temp321.

    temp82 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp82 TO temp321.

    temp83 = |    "$id": "{ schema_id }",|.
    APPEND temp83 TO temp321.
    APPEND `     "title": "Constant With Field Format Version",` TO temp321.
    APPEND `     "description": "Constant with field format_version",` TO temp321.
    APPEND `     "type": "object",` TO temp321.
    APPEND `     "properties": {` TO temp321.
    APPEND `       "formatVersion": {` TO temp321.
    APPEND `         "title": "ABAP File Format Version",` TO temp321.
    APPEND `         "description": "The ABAP file format version",` TO temp321.
    APPEND `         "type": "string",` TO temp321.
    APPEND `         "const": "1"` TO temp321.
    APPEND `       },` TO temp321.
    APPEND `       "field1": {` TO temp321.
    APPEND `         "title": "Other Field",` TO temp321.
    APPEND `         "description": "Other field",` TO temp321.
    APPEND `         "type": "integer",` TO temp321.
    APPEND `         "minimum": -2147483648,` TO temp321.
    APPEND `         "maximum": 2147483647` TO temp321.
    APPEND `       }` TO temp321.
    APPEND `     },` TO temp321.
    APPEND `     "additionalProperties": false` TO temp321.
    APPEND `   }` TO temp321.

    APPEND temp346 TO temp321.

    exp_schema = temp321.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD number_element.
    DATA temp347 TYPE zcl_aff_test_types=>integer.
    DATA act_schema TYPE string_table.
    DATA temp348 TYPE string_table.
    DATA temp84 LIKE LINE OF temp348.
    DATA temp85 LIKE LINE OF temp348.
    DATA temp86 LIKE LINE OF temp348.
    DATA temp359 LIKE LINE OF temp348.
    DATA exp_schema LIKE temp348.
    CLEAR temp347.

    act_schema = test_generator->generate_type( temp347 ).

    CLEAR temp348.
    APPEND `{` TO temp348.

    temp84 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp84 TO temp348.

    temp85 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp85 TO temp348.

    temp86 = |    "$id": "{ schema_id }",|.
    APPEND temp86 TO temp348.
    APPEND `    "title": "myInteger",` TO temp348.
    APPEND `    "description": "A simple Integer",` TO temp348.
    APPEND `    "type": "integer",` TO temp348.
    APPEND `    "minimum": -2147483648,` TO temp348.
    APPEND `    "maximum": 2147483647` TO temp348.
    APPEND `}` TO temp348.

    APPEND temp359 TO temp348.

    exp_schema = temp348.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD string_element.
    DATA temp360 TYPE zcl_aff_test_types=>mystring.
    DATA act_schema TYPE string_table.
    DATA temp361 TYPE string_table.
    DATA temp87 LIKE LINE OF temp361.
    DATA temp88 LIKE LINE OF temp361.
    DATA temp89 LIKE LINE OF temp361.
    DATA temp371 LIKE LINE OF temp361.
    DATA exp_schema LIKE temp361.
    CLEAR temp360.

    act_schema = test_generator->generate_type( temp360 ).

    CLEAR temp361.
    APPEND `{` TO temp361.

    temp87 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp87 TO temp361.

    temp88 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp88 TO temp361.

    temp89 = |    "$id": "{ schema_id }",|.
    APPEND temp89 TO temp361.
    APPEND `    "title": "myStringName",` TO temp361.
    APPEND `    "description": "This is a string",` TO temp361.
    APPEND `    "type": "string",` TO temp361.
    APPEND `    "maxLength": 3` TO temp361.
    APPEND `}` TO temp361.

    APPEND temp371 TO temp361.

    exp_schema = temp361.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD date_time_element.
    DATA temp372 TYPE zcl_aff_test_types=>my_date.
    DATA act_schema TYPE string_table.
    DATA temp373 TYPE string_table.
    DATA temp90 LIKE LINE OF temp373.
    DATA temp91 LIKE LINE OF temp373.
    DATA temp92 LIKE LINE OF temp373.
    DATA temp383 LIKE LINE OF temp373.
    DATA exp_schema LIKE temp373.
    CLEAR temp372.

    act_schema = test_generator->generate_type( temp372 ).

    CLEAR temp373.
    APPEND `{` TO temp373.

    temp90 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp90 TO temp373.

    temp91 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp91 TO temp373.

    temp92 = |    "$id": "{ schema_id }",|.
    APPEND temp92 TO temp373.
    APPEND `    "title": "Date",` TO temp373.
    APPEND `    "description": "This is a date",` TO temp373.
    APPEND `    "type": "string",` TO temp373.
    APPEND `    "format" :"date-time"` TO temp373.
    APPEND `}` TO temp373.

    APPEND temp383 TO temp373.

    exp_schema = temp373.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD simple_structure.
    DATA temp384 TYPE zcl_aff_test_types=>my_structure.
    DATA act_schema TYPE string_table.
    DATA temp385 TYPE string_table.
    DATA temp93 LIKE LINE OF temp385.
    DATA temp94 LIKE LINE OF temp385.
    DATA temp95 LIKE LINE OF temp385.
    DATA temp410 LIKE LINE OF temp385.
    DATA exp_schema LIKE temp385.
    CLEAR temp384.

    act_schema = test_generator->generate_type( temp384 ).

    CLEAR temp385.
    APPEND `{` TO temp385.

    temp93 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp93 TO temp385.

    temp94 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp94 TO temp385.

    temp95 = |    "$id": "{ schema_id }",|.
    APPEND temp95 TO temp385.
    APPEND `    "title": "mySimpleStructure",` TO temp385.
    APPEND `    "description": "This is a simple structure",` TO temp385.
    APPEND `    "type": "object",` TO temp385.
    APPEND `    "properties": {` TO temp385.
    APPEND `        "myFirstElement": {` TO temp385.
    APPEND `            "title": "First Element",` TO temp385.
    APPEND `            "description": "This is the first element",` TO temp385.
    APPEND `            "type": "string",` TO temp385.
    APPEND `            "minLength": 4` TO temp385.
    APPEND `        },` TO temp385.
    APPEND `        "mySecondElement": {` TO temp385.
    APPEND `            "title": "Second Element",` TO temp385.
    APPEND `            "description": "This is the second element",` TO temp385.
    APPEND `            "type": "integer",` TO temp385.
    APPEND `            "minimum": -2147483648,` TO temp385.
    APPEND `            "maximum": 2147483647` TO temp385.
    APPEND `        }` TO temp385.
    APPEND `    },` TO temp385.
    APPEND `    "additionalProperties": false` TO temp385.
    APPEND `}` TO temp385.

    APPEND temp410 TO temp385.

    exp_schema = temp385.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD simple_structure_single_field.
    DATA temp411 TYPE zcl_aff_test_types=>my_structure_single.
    DATA act_schema TYPE string_table.
    DATA temp412 TYPE string_table.
    DATA temp96 LIKE LINE OF temp412.
    DATA temp97 LIKE LINE OF temp412.
    DATA temp98 LIKE LINE OF temp412.
    DATA temp430 LIKE LINE OF temp412.
    DATA exp_schema LIKE temp412.
    CLEAR temp411.

    act_schema = test_generator->generate_type( temp411 ).

    CLEAR temp412.
    APPEND `{` TO temp412.

    temp96 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp96 TO temp412.

    temp97 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp97 TO temp412.

    temp98 = |    "$id": "{ schema_id }",|.
    APPEND temp98 TO temp412.
    APPEND `    "title": "mySimpleStructure",` TO temp412.
    APPEND `    "description": "This is a simple structure",` TO temp412.
    APPEND `    "type": "object",` TO temp412.
    APPEND `    "properties": {` TO temp412.
    APPEND `        "fooElement": {` TO temp412.
    APPEND `            "title": "Foo Element",` TO temp412.
    APPEND `            "description": "This is the first element",` TO temp412.
    APPEND `            "type": "string",` TO temp412.
    APPEND `            "minLength": 4` TO temp412.
    APPEND `        }` TO temp412.
    APPEND `    },` TO temp412.
    APPEND `    "additionalProperties": false` TO temp412.
    APPEND `}` TO temp412.

    APPEND temp430 TO temp412.

    exp_schema = temp412.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD simple_structure_two_fields.
    DATA temp431 TYPE zcl_aff_test_types=>my_structure_two.
    DATA act_schema TYPE string_table.
    DATA temp432 TYPE string_table.
    DATA temp99 LIKE LINE OF temp432.
    DATA temp100 LIKE LINE OF temp432.
    DATA temp101 LIKE LINE OF temp432.
    DATA temp455 LIKE LINE OF temp432.
    DATA exp_schema LIKE temp432.
    CLEAR temp431.

    act_schema = test_generator->generate_type( temp431 ).

    CLEAR temp432.
    APPEND `{` TO temp432.

    temp99 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp99 TO temp432.

    temp100 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp100 TO temp432.

    temp101 = |    "$id": "{ schema_id }",|.
    APPEND temp101 TO temp432.
    APPEND `    "description": "This is a two field structure",` TO temp432.
    APPEND `    "type": "object",` TO temp432.
    APPEND `    "properties": {` TO temp432.
    APPEND `        "foo1": {` TO temp432.
    APPEND `            "description": "foo1 element",` TO temp432.
    APPEND `            "type": "integer",` TO temp432.
    APPEND `            "minimum": -2147483648,` TO temp432.
    APPEND `            "maximum": 2147483647` TO temp432.
    APPEND `        },` TO temp432.
    APPEND `        "foo2": {` TO temp432.
    APPEND `            "description": "foo2 element",` TO temp432.
    APPEND `            "type": "integer",` TO temp432.
    APPEND `            "minimum": -2147483648,` TO temp432.
    APPEND `            "maximum": 2147483647` TO temp432.
    APPEND `        }` TO temp432.
    APPEND `    },` TO temp432.
    APPEND `    "additionalProperties": false` TO temp432.
    APPEND `}` TO temp432.

    APPEND temp455 TO temp432.

    exp_schema = temp432.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD simple_structure_dollar.
    DATA temp456 TYPE zcl_aff_test_types=>my_structure2.
    DATA act_schema TYPE string_table.
    DATA temp457 TYPE string_table.
    DATA temp102 LIKE LINE OF temp457.
    DATA temp103 LIKE LINE OF temp457.
    DATA temp104 LIKE LINE OF temp457.
    DATA temp485 LIKE LINE OF temp457.
    DATA exp_schema LIKE temp457.
    CLEAR temp456.

    act_schema = test_generator->generate_type( temp456 ).

    CLEAR temp457.
    APPEND `{` TO temp457.

    temp102 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp102 TO temp457.

    temp103 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp103 TO temp457.

    temp104 = |    "$id": "{ schema_id }",|.
    APPEND temp104 TO temp457.
    APPEND `    "title": "mySimpleStructure",` TO temp457.
    APPEND `    "description": "This is a $ simple st",` TO temp457.
    APPEND `    "type": "object",` TO temp457.
    APPEND `    "properties": {` TO temp457.
    APPEND `        "myFirstElement": {` TO temp457.
    APPEND `            "title": "First Element",` TO temp457.
    APPEND `            "description": "This is the first element",` TO temp457.
    APPEND `            "type": "string",` TO temp457.
    APPEND `            "maxLength": 3` TO temp457.
    APPEND `        },` TO temp457.
    APPEND `        "mySecondElement": {` TO temp457.
    APPEND `            "title": "Second Element",` TO temp457.
    APPEND `            "description": "This is the second element",` TO temp457.
    APPEND `            "type": "integer",` TO temp457.
    APPEND `            "minimum": -2147483648,` TO temp457.
    APPEND `            "maximum": 2147483647` TO temp457.
    APPEND `        }` TO temp457.
    APPEND `    },` TO temp457.
    APPEND `    "additionalProperties": false,` TO temp457.
    APPEND `    "required": [` TO temp457.
    APPEND `      "myFirstElement" ` TO temp457.
    APPEND `    ]` TO temp457.
    APPEND `}` TO temp457.

    APPEND temp485 TO temp457.

    exp_schema = temp457.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Annotation $ructure is unknown`
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `MY_STRUCTURE2` ).
  ENDMETHOD.


  METHOD nested_structure.
    DATA temp486 TYPE zcl_aff_test_types=>my_structure3.
    DATA act_schema TYPE string_table.
    DATA temp487 TYPE string_table.
    DATA temp105 LIKE LINE OF temp487.
    DATA temp106 LIKE LINE OF temp487.
    DATA temp107 LIKE LINE OF temp487.
    DATA temp520 LIKE LINE OF temp487.
    DATA exp_schema LIKE temp487.
    CLEAR temp486.

    act_schema = test_generator->generate_type( temp486 ).

    CLEAR temp487.
    APPEND `{` TO temp487.

    temp105 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp105 TO temp487.

    temp106 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp106 TO temp487.

    temp107 = |    "$id": "{ schema_id }",|.
    APPEND temp107 TO temp487.
    APPEND `    "title": "myStructure",` TO temp487.
    APPEND `    "description": "This is a complex structure",` TO temp487.
    APPEND `    "type": "object",` TO temp487.
    APPEND `    "properties": {` TO temp487.
    APPEND `        "nestedStruc": {` TO temp487.
    APPEND `            "title": "nestedStruc",` TO temp487.
    APPEND `            "description": "This is the nested structure",` TO temp487.
    APPEND `            "type": "object",` TO temp487.
    APPEND `            "properties": {` TO temp487.
    APPEND `                "myElement": {` TO temp487.
    APPEND `                    "title": "myElementComponente",` TO temp487.
    APPEND `                    "description": "This is a string element",` TO temp487.
    APPEND `                    "type": "string"` TO temp487.
    APPEND `                }` TO temp487.
    APPEND `            },` TO temp487.
    APPEND `            "additionalProperties": false` TO temp487.
    APPEND `        },` TO temp487.
    APPEND `        "myElement": {` TO temp487.
    APPEND `          "title": "My Element",` TO temp487.
    APPEND `          "description": "This is my element",` TO temp487.
    APPEND `          "type": "string"` TO temp487.
    APPEND `       }` TO temp487.
    APPEND `    },` TO temp487.
    APPEND `    "additionalProperties": false,` TO temp487.
    APPEND `    "required": [ ` TO temp487.
    APPEND `      "myElement" ` TO temp487.
    APPEND `    ]` TO temp487.
    APPEND `}` TO temp487.

    APPEND temp520 TO temp487.

    exp_schema = temp487.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD standard_table.
    DATA temp521 TYPE zcl_aff_test_types=>my_standard_table.
    DATA act_schema TYPE string_table.
    DATA temp522 TYPE string_table.
    DATA temp108 LIKE LINE OF temp522.
    DATA temp109 LIKE LINE OF temp522.
    DATA temp110 LIKE LINE OF temp522.
    DATA temp537 LIKE LINE OF temp522.
    DATA exp_schema LIKE temp522.
    CLEAR temp521.

    act_schema = test_generator->generate_type( temp521 ).

    CLEAR temp522.
    APPEND `{` TO temp522.

    temp108 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp108 TO temp522.

    temp109 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp109 TO temp522.

    temp110 = |    "$id": "{ schema_id }",|.
    APPEND temp110 TO temp522.
    APPEND `    "title": "A Standard Table",` TO temp522.
    APPEND `    "description": "A standard table of myString",` TO temp522.
    APPEND `    "type": "array",` TO temp522.
    APPEND `    "items": {` TO temp522.
    APPEND `        "title": "myStringName",` TO temp522.
    APPEND `        "description": "This is a string",` TO temp522.
    APPEND `        "type": "string",` TO temp522.
    APPEND `        "maxLength": 3` TO temp522.
    APPEND `    }` TO temp522.
    APPEND `}` TO temp522.

    APPEND temp537 TO temp522.

    exp_schema = temp522.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD hashed_table.
    DATA temp538 TYPE zcl_aff_test_types=>my_hashed_table.
    DATA act_schema TYPE string_table.
    DATA temp539 TYPE string_table.
    DATA temp111 LIKE LINE OF temp539.
    DATA temp112 LIKE LINE OF temp539.
    DATA temp113 LIKE LINE OF temp539.
    DATA temp570 LIKE LINE OF temp539.
    DATA exp_schema LIKE temp539.
    CLEAR temp538.

    act_schema = test_generator->generate_type( temp538 ).

    CLEAR temp539.
    APPEND `{` TO temp539.

    temp111 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp111 TO temp539.

    temp112 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp112 TO temp539.

    temp113 = |    "$id": "{ schema_id }",|.
    APPEND temp113 TO temp539.
    APPEND `    "title": "A Hashed Table",` TO temp539.
    APPEND `    "description": "A hashed table of my_structure",` TO temp539.
    APPEND `    "type": "array",` TO temp539.
    APPEND `    "uniqueItems" : true,` TO temp539.
    APPEND `    "items": {` TO temp539.
    APPEND `        "title": "mySimpleStructure",` TO temp539.
    APPEND `        "description": "This is a simple structure",` TO temp539.
    APPEND `        "type": "object",` TO temp539.
    APPEND `        "properties": {` TO temp539.
    APPEND `            "myFirstElement": {` TO temp539.
    APPEND `                "title": "First Element",` TO temp539.
    APPEND `                "description": "This is the first element",` TO temp539.
    APPEND `                "type": "string",` TO temp539.
    APPEND `                "minLength": 4` TO temp539.
    APPEND `            }, ` TO temp539.
    APPEND `            "mySecondElement": {` TO temp539.
    APPEND `                "title": "Second Element",` TO temp539.
    APPEND `                "description": "This is the second element",` TO temp539.
    APPEND `                "type": "integer",` TO temp539.
    APPEND `                "minimum": -2147483648,` TO temp539.
    APPEND `                "maximum": 2147483647` TO temp539.
    APPEND `            } ` TO temp539.
    APPEND `        },` TO temp539.
    APPEND `        "additionalProperties": false` TO temp539.
    APPEND `    }` TO temp539.
    APPEND `}` TO temp539.

    APPEND temp570 TO temp539.

    exp_schema = temp539.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD structure_with_tables.
    DATA temp571 TYPE zcl_aff_test_types=>my_structure_with_tables.
    DATA act_schema TYPE string_table.
    DATA temp572 TYPE string_table.
    DATA temp114 LIKE LINE OF temp572.
    DATA temp115 LIKE LINE OF temp572.
    DATA temp116 LIKE LINE OF temp572.
    DATA temp637 LIKE LINE OF temp572.
    DATA exp_schema LIKE temp572.
    CLEAR temp571.

    act_schema = test_generator->generate_type( temp571 ).

    CLEAR temp572.
    APPEND `{` TO temp572.

    temp114 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp114 TO temp572.

    temp115 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp115 TO temp572.

    temp116 = |    "$id": "{ schema_id }",|.
    APPEND temp116 TO temp572.
    APPEND `    "title": "A Structure With Tables",` TO temp572.
    APPEND `    "description": "A structure with different table types",` TO temp572.
    APPEND `    "type": "object",` TO temp572.
    APPEND `    "properties": {` TO temp572.
    APPEND `        "firstTable": {` TO temp572.
    APPEND `            "title": "First Table",` TO temp572.
    APPEND `            "description": "First table",` TO temp572.
    APPEND `            "type": "array",` TO temp572.
    APPEND `            "uniqueItems": true,` TO temp572.
    APPEND `            "items": {` TO temp572.
    APPEND `                "title": "mySimpleStructure",` TO temp572.
    APPEND `                "description": "This is a simple structure",` TO temp572.
    APPEND `                "type": "object",` TO temp572.
    APPEND `                "properties": {` TO temp572.
    APPEND `                    "myFirstElement": {` TO temp572.
    APPEND `                        "title": "First Element",` TO temp572.
    APPEND `                        "description": "This is the first element",` TO temp572.
    APPEND `                        "type": "string",` TO temp572.
    APPEND `                        "minLength": 4` TO temp572.
    APPEND `                    }, ` TO temp572.
    APPEND `                    "mySecondElement": {` TO temp572.
    APPEND `                        "title": "Second Element",` TO temp572.
    APPEND `                        "description": "This is the second element",` TO temp572.
    APPEND `                        "type": "integer",` TO temp572.
    APPEND `                        "minimum": -2147483648,` TO temp572.
    APPEND `                        "maximum": 2147483647` TO temp572.
    APPEND `                    } ` TO temp572.
    APPEND `                },` TO temp572.
    APPEND `                "additionalProperties": false` TO temp572.
    APPEND `            }` TO temp572.
    APPEND `        },` TO temp572.
    APPEND `        "secondTable": {` TO temp572.
    APPEND `            "title": "Second Table",` TO temp572.
    APPEND `            "description": "Second table",` TO temp572.
    APPEND `            "type": "array",` TO temp572.
    APPEND `            "items": {` TO temp572.
    APPEND `                "title": "mySimpleStructure",` TO temp572.
    APPEND `                "description": "This is a simple structure",` TO temp572.
    APPEND `                "type": "object",` TO temp572.
    APPEND `                "properties": {` TO temp572.
    APPEND `                    "myFirstElement": {` TO temp572.
    APPEND `                        "title": "First Element",` TO temp572.
    APPEND `                        "description": "This is the first element",` TO temp572.
    APPEND `                        "type": "string",` TO temp572.
    APPEND `                        "minLength": 4` TO temp572.
    APPEND `                    }, ` TO temp572.
    APPEND `                    "mySecondElement": {` TO temp572.
    APPEND `                        "title": "Second Element",` TO temp572.
    APPEND `                        "description": "This is the second element",` TO temp572.
    APPEND `                        "type": "integer",` TO temp572.
    APPEND `                        "minimum": -2147483648,` TO temp572.
    APPEND `                        "maximum": 2147483647` TO temp572.
    APPEND `                    } ` TO temp572.
    APPEND `                },` TO temp572.
    APPEND `                "additionalProperties": false` TO temp572.
    APPEND `            }` TO temp572.
    APPEND `        }` TO temp572.
    APPEND `    },` TO temp572.
    APPEND `    "additionalProperties": false` TO temp572.
    APPEND `}` TO temp572.

    APPEND temp637 TO temp572.

    exp_schema = temp572.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_with_different_enum.
    DATA temp638 TYPE zcl_aff_test_types=>structure_with_different_enum.
    DATA test LIKE temp638.
    CLEAR temp638.

    test = temp638.
    test_generator->generate_type( test ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = zif_aff_log=>co_msg127
                                                              exp_component_name = `STRUCTURE_WITH_DIFFERENT_ENUM-ENUM_WITHOUT_ALL`
                                                              exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.


  METHOD complex_type_with_enum.
    DATA temp639 TYPE zcl_aff_test_types=>ty_class_properties.
    DATA act_schema_co TYPE string_table.
    DATA temp640 TYPE string_table.
    DATA temp117 LIKE LINE OF temp640.
    DATA temp118 LIKE LINE OF temp640.
    DATA temp119 LIKE LINE OF temp640.
    DATA temp709 LIKE LINE OF temp640.
    DATA exp_schema LIKE temp640.
    CLEAR temp639.

    act_schema_co = test_generator->generate_type( temp639 ).

    CLEAR temp640.
    APPEND `{` TO temp640.

    temp117 = |   "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp117 TO temp640.

    temp118 = |   "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp118 TO temp640.

    temp119 = |   "$id": "{ schema_id }",|.
    APPEND temp119 TO temp640.
    APPEND `   "title": "Class Properties",` TO temp640.
    APPEND `   "description": "Class properties",` TO temp640.
    APPEND `   "type": "object",` TO temp640.
    APPEND `   "properties": {` TO temp640.
    APPEND `     "header": {` TO temp640.
    APPEND `       "title": "Header",` TO temp640.
    APPEND `       "description": "The header for an ABAP main object",` TO temp640.
    APPEND `       "type": "object",` TO temp640.
    APPEND `       "properties": {` TO temp640.
    APPEND `         "description": {` TO temp640.
    APPEND `           "title": "Description",` TO temp640.
    APPEND `           "description": "Description of the ABAP object",` TO temp640.
    APPEND `           "type": "string"` TO temp640.
    APPEND `       },` TO temp640.
    APPEND `       "originalLanguage": {` TO temp640.
    APPEND `         "title": "Original Language",` TO temp640.
    APPEND `         "description": "Original language of the ABAP object",` TO temp640.
    APPEND `         "type": "string",` TO temp640.
    APPEND `         "minLength": 2,` TO temp640.
    APPEND `         "maxLength": 2,` TO temp640.
    APPEND `         "pattern": "^[a-z]+$"` TO temp640.
    APPEND `         },` TO temp640.
    APPEND `         "abapLanguageVersion": {` TO temp640.
    APPEND `           "title": "ABAP Language Version",` TO temp640.
    APPEND `           "description": "ABAP language version",` TO temp640.
    APPEND `           "type": "string",` TO temp640.
    APPEND `           "enum": [` TO temp640.
    APPEND `             "standard",` TO temp640.
    APPEND `             "cloudDevelopment"` TO temp640.
    APPEND `           ],` TO temp640.
    APPEND `           "enumTitles": [` TO temp640.
    APPEND `             "Standard",` TO temp640.
    APPEND `             "ABAP Cloud Development"` TO temp640.
    APPEND `           ],` TO temp640.
    APPEND `           "enumDescriptions": [` TO temp640.
    APPEND `             "Standard",` TO temp640.
    APPEND `             "ABAP cloud development"` TO temp640.
    APPEND `           ],` TO temp640.
    APPEND `           "default": "standard"` TO temp640.
    APPEND `        }` TO temp640.
    APPEND `       },` TO temp640.
    APPEND `       "additionalProperties": false` TO temp640.
    APPEND `     },` TO temp640.
    APPEND `     "classCategory": {` TO temp640.
    APPEND `       "title": "Class Category",` TO temp640.
    APPEND `       "description": "Class category",` TO temp640.
    APPEND `       "type": "string",` TO temp640.
    APPEND `       "enum": [` TO temp640.
    APPEND `         "general",` TO temp640.
    APPEND `         "exitClass"` TO temp640.
    APPEND `       ],` TO temp640.
    APPEND `       "enumTitles": [ ` TO temp640.
    APPEND `         "General",` TO temp640.
    APPEND `         "Exit Class"` TO temp640.
    APPEND `       ],` TO temp640.
    APPEND `       "enumDescriptions": [ ` TO temp640.
    APPEND `         "General",` TO temp640.
    APPEND `         "Exit class"` TO temp640.
    APPEND `       ],` TO temp640.
    APPEND `       "default": "general"` TO temp640.
    APPEND `     }` TO temp640.
    APPEND `   },` TO temp640.
    APPEND `    "additionalProperties": false` TO temp640.
    APPEND `}` TO temp640.

    APPEND temp709 TO temp640.

    exp_schema = temp640.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD nested_nested_structure.
    DATA temp710 TYPE zcl_aff_test_types=>list.
    DATA act_schema_co TYPE string_table.
    DATA temp711 TYPE string_table.
    DATA temp120 LIKE LINE OF temp711.
    DATA temp121 LIKE LINE OF temp711.
    DATA temp122 LIKE LINE OF temp711.
    DATA temp781 LIKE LINE OF temp711.
    DATA exp_schema LIKE temp711.
    CLEAR temp710.

    act_schema_co = test_generator->generate_type( temp710 ).

    CLEAR temp711.
    APPEND `{` TO temp711.

    temp120 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp120 TO temp711.

    temp121 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp121 TO temp711.

    temp122 = |    "$id": "{ schema_id }",|.
    APPEND temp122 TO temp711.
    APPEND `    "title": "outerStructure", ` TO temp711.
    APPEND `    "description": "ABAP Doc Comment TYPES list first level", ` TO temp711.
    APPEND `    "type": "object", ` TO temp711.
    APPEND `    "properties": { ` TO temp711.
    APPEND `      "field1": { ` TO temp711.
    APPEND `        "title": "Outer Element 1",  ` TO temp711.
    APPEND `        "description": "ABAP Doc field1", ` TO temp711.
    APPEND `        "type": "integer",` TO temp711.
    APPEND `        "minimum": -2147483648, ` TO temp711.
    APPEND `        "maximum": 2147483647 ` TO temp711.
    APPEND `      }, ` TO temp711.
    APPEND `      "field2": { ` TO temp711.
    APPEND `         "title": "Outer Element 2", ` TO temp711.
    APPEND `         "description": "ABAP Doc field2", ` TO temp711.
    APPEND `         "type": "string", ` TO temp711.
    APPEND `         "maxLength": 2 ` TO temp711.
    APPEND `      }, ` TO temp711.
    APPEND `      "list1": { ` TO temp711.
    APPEND `         "title": "middleStructure", ` TO temp711.
    APPEND `        "description": "ABAP Doc list second level", ` TO temp711.
    APPEND `        "type": "object", ` TO temp711.
    APPEND `        "properties": { ` TO temp711.
    APPEND `          "elementOfList1": { ` TO temp711.
    APPEND `             "title": "Middle Element", ` TO temp711.
    APPEND `            "description": "ABAP Doc second level", ` TO temp711.
    APPEND `            "type": "integer", ` TO temp711.
    APPEND `            "minimum": -2147483648, ` TO temp711.
    APPEND `            "maximum": 2147483647 ` TO temp711.
    APPEND `          }, ` TO temp711.
    APPEND `           "list2": { ` TO temp711.
    APPEND `            "title": "innerStructure", ` TO temp711.
    APPEND `            "description": "ABAP Doc third level", ` TO temp711.
    APPEND `            "type": "object", ` TO temp711.
    APPEND `            "properties": { ` TO temp711.
    APPEND `              "elementOfList2": { ` TO temp711.
    APPEND `                "title": "Inner Element", ` TO temp711.
    APPEND `                "description": "ABAP Doc third level", ` TO temp711.
    APPEND `                "type": "string" ` TO temp711.
    APPEND `              } ` TO temp711.
    APPEND `             }, ` TO temp711.
    APPEND `            "additionalProperties": false, ` TO temp711.
    APPEND `            "required": [ ` TO temp711.
    APPEND `              "elementOfList2"` TO temp711.
    APPEND `            ] ` TO temp711.
    APPEND `          } ` TO temp711.
    APPEND `        }, ` TO temp711.
    APPEND `         "additionalProperties": false, ` TO temp711.
    APPEND `         "required": [ ` TO temp711.
    APPEND `           "elementOfList1" ` TO temp711.
    APPEND `         ] ` TO temp711.
    APPEND `      }, ` TO temp711.
    APPEND `      "field3": { ` TO temp711.
    APPEND `        "title": "Outer Element 3", ` TO temp711.
    APPEND `         "description": "ABAP Doc field3",` TO temp711.
    APPEND `        "type": "string", ` TO temp711.
    APPEND `        "maxLength": 2 ` TO temp711.
    APPEND `      } ` TO temp711.
    APPEND `     }, ` TO temp711.
    APPEND `    "additionalProperties": false, ` TO temp711.
    APPEND `    "required": [` TO temp711.
    APPEND `      "field2",` TO temp711.
    APPEND `      "list1",` TO temp711.
    APPEND `      "field3"` TO temp711.
    APPEND `    ] ` TO temp711.
    APPEND `  } ` TO temp711.

    APPEND temp781 TO temp711.

    exp_schema = temp711.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD table_in_nested_stru_with_ad.
    DATA temp782 TYPE zcl_aff_test_types=>outer_struc.
    DATA act_schema_co TYPE string_table.
    DATA temp783 TYPE string_table.
    DATA temp123 LIKE LINE OF temp783.
    DATA temp124 LIKE LINE OF temp783.
    DATA temp125 LIKE LINE OF temp783.
    DATA temp838 LIKE LINE OF temp783.
    DATA exp_schema LIKE temp783.
    CLEAR temp782.

    act_schema_co = test_generator->generate_type( temp782 ).

    CLEAR temp783.
    APPEND ` { ` TO temp783.

    temp123 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp123 TO temp783.

    temp124 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp124 TO temp783.

    temp125 = |    "$id": "{ schema_id }",|.
    APPEND temp125 TO temp783.
    APPEND `    "title": "outerStructure", ` TO temp783.
    APPEND `    "description": "ABAP Doc Comment TYPES list first level", ` TO temp783.
    APPEND `    "type": "object", ` TO temp783.
    APPEND `    "properties": { ` TO temp783.
    APPEND `      "field1": { ` TO temp783.
    APPEND `        "title": "Outer Element1",  ` TO temp783.
    APPEND `        "description": "ABAP Doc field1 first level", ` TO temp783.
    APPEND `        "type": "integer",` TO temp783.
    APPEND `        "minimum": -2147483648, ` TO temp783.
    APPEND `        "maximum": 2147483647 ` TO temp783.
    APPEND `      }, ` TO temp783.
    APPEND `      "innerStruc": { ` TO temp783.
    APPEND `         "title": "Inner Structure 1", ` TO temp783.
    APPEND `         "description": "Inner structure", ` TO temp783.
    APPEND `         "type": "object", ` TO temp783.
    APPEND `         "properties": { ` TO temp783.
    APPEND `            "elementOfInnerStruc": { ` TO temp783.
    APPEND `              "title": "Inner Element", ` TO temp783.
    APPEND `              "description": "ABAP Doc element second level", ` TO temp783.
    APPEND `              "type": "integer",` TO temp783.
    APPEND `              "minimum": -2147483648, ` TO temp783.
    APPEND `              "maximum": 2147483647 ` TO temp783.
    APPEND `             }, ` TO temp783.
    APPEND `             "innerTableVar": { ` TO temp783.
    APPEND `              "title": "inner Table", ` TO temp783.
    APPEND `              "description": "ABAP Doc element second level", ` TO temp783.
    APPEND `              "type": "array", ` TO temp783.
    APPEND `                "items": { ` TO temp783.
    APPEND `                 "type": "string" ` TO temp783.
    APPEND `                } ` TO temp783.
    APPEND `              } ` TO temp783.
    APPEND `          }, ` TO temp783.
    APPEND `          "additionalProperties": false, ` TO temp783.
    APPEND `          "required": [` TO temp783.
    APPEND `            "elementOfInnerStruc",` TO temp783.
    APPEND `            "innerTableVar"` TO temp783.
    APPEND `          ] ` TO temp783.
    APPEND `      }, ` TO temp783.
    APPEND `      "field2": { ` TO temp783.
    APPEND `        "title": "Outer Element2", ` TO temp783.
    APPEND `        "description": "ABAP Doc field2 first level",` TO temp783.
    APPEND `        "type": "string", ` TO temp783.
    APPEND `        "maxLength": 2 ` TO temp783.
    APPEND `      } ` TO temp783.
    APPEND `    }, ` TO temp783.
    APPEND `    "additionalProperties": false, ` TO temp783.
    APPEND `    "required": [` TO temp783.
    APPEND `      "field2"` TO temp783.
    APPEND `    ] ` TO temp783.
    APPEND `  } ` TO temp783.

    APPEND temp838 TO temp783.

    exp_schema = temp783.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD nestes_table_with_ad.
    DATA temp839 TYPE zcl_aff_test_types=>first_table.
    DATA act_schema_co TYPE string_table.
    DATA temp840 TYPE string_table.
    DATA temp126 LIKE LINE OF temp840.
    DATA temp127 LIKE LINE OF temp840.
    DATA temp128 LIKE LINE OF temp840.
    DATA temp857 LIKE LINE OF temp840.
    DATA exp_schema LIKE temp840.
    CLEAR temp839.

    act_schema_co = test_generator->generate_type( temp839 ).

    CLEAR temp840.
    APPEND ` { ` TO temp840.

    temp126 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp126 TO temp840.

    temp127 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp127 TO temp840.

    temp128 = |    "$id": "{ schema_id }",|.
    APPEND temp128 TO temp840.
    APPEND `    "title": "Outer Table", ` TO temp840.
    APPEND `    "description": "This is the outer table", ` TO temp840.
    APPEND `    "type": "array", ` TO temp840.
    APPEND `    "items": { ` TO temp840.
    APPEND `      "title": "Inner Table", ` TO temp840.
    APPEND `      "description": "This is the inner Table", ` TO temp840.
    APPEND `      "type": "array", ` TO temp840.
    APPEND `      "items": { ` TO temp840.
    APPEND `        "type": "string" ` TO temp840.
    APPEND `      } ` TO temp840.
    APPEND `    } ` TO temp840.
    APPEND `  } ` TO temp840.

    APPEND temp857 TO temp840.

    exp_schema = temp840.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_with_wrong_enum_link.
    DATA temp858 TYPE zcl_aff_test_types=>structure_with_wrong_link.
    DATA act_schema_co TYPE string_table.
    DATA temp859 TYPE string_table.
    DATA temp129 LIKE LINE OF temp859.
    DATA temp130 LIKE LINE OF temp859.
    DATA temp131 LIKE LINE OF temp859.
    DATA temp883 LIKE LINE OF temp859.
    DATA exp_schema LIKE temp859.
    CLEAR temp858.

    act_schema_co = test_generator->generate_type( temp858 ).

    CLEAR temp859.
    APPEND ` { ` TO temp859.

    temp129 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp129 TO temp859.

    temp130 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp130 TO temp859.

    temp131 = |    "$id": "{ schema_id }",|.
    APPEND temp131 TO temp859.
    APPEND `    "title": "Structure with Wrong Link", ` TO temp859.
    APPEND `    "description": "This is a structure with wrong enum_values link", ` TO temp859.
    APPEND `    "type": "object", ` TO temp859.
    APPEND `    "properties": { ` TO temp859.
    APPEND `      "elementOne": { ` TO temp859.
    APPEND `        "title": "First Element",  ` TO temp859.
    APPEND `        "description": "First element", ` TO temp859.
    APPEND `        "type": "string"` TO temp859.
    APPEND `      }, ` TO temp859.
    APPEND `      "elementTwo": { ` TO temp859.
    APPEND `        "title": "Second Element",  ` TO temp859.
    APPEND `        "description": "Second element", ` TO temp859.
    APPEND `        "type": "string",` TO temp859.
    APPEND `        "maxLength": 2, ` TO temp859.
    APPEND `        "pattern": "^[0-9]+$" ` TO temp859.
    APPEND `      } ` TO temp859.
    APPEND `    }, ` TO temp859.
    APPEND `    "additionalProperties": false ` TO temp859.
    APPEND `  } ` TO temp859.

    APPEND temp883 TO temp859.

    exp_schema = temp859.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = 'Constant ZCL_AFF_TEST_TYPES=>ENUM_VALUES_WRONG given in ABAP Doc link doesn''t exist'
      exp_type           = zif_aff_log=>c_message_type-warning
      exp_component_name = `STRUCTURE_WITH_WRONG_LINK-ELEMENT_TWO` ).
  ENDMETHOD.


  METHOD structure_with_table.
    DATA temp884 TYPE zcl_aff_test_types=>structure_with_doc_outside.
    DATA act_schema_co TYPE string_table.
    DATA temp885 TYPE string_table.
    DATA temp132 LIKE LINE OF temp885.
    DATA temp133 LIKE LINE OF temp885.
    DATA temp134 LIKE LINE OF temp885.
    DATA temp931 LIKE LINE OF temp885.
    DATA exp_schema LIKE temp885.
    CLEAR temp884.

    act_schema_co = test_generator->generate_type( temp884 ).

    CLEAR temp885.
    APPEND `{ ` TO temp885.

    temp132 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp132 TO temp885.

    temp133 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp133 TO temp885.

    temp134 = |    "$id": "{ schema_id }",|.
    APPEND temp134 TO temp885.
    APPEND `    "title": "Structure With ABAP Doc Outside",` TO temp885.
    APPEND `    "description": "Structure with ABAP Doc outside",` TO temp885.
    APPEND `    "type": "object",` TO temp885.
    APPEND `    "properties": {` TO temp885.
    APPEND `      "table1": {` TO temp885.
    APPEND `        "title": "Table1",` TO temp885.
    APPEND `        "description": "Table1",` TO temp885.
    APPEND `        "type": "array",` TO temp885.
    APPEND `        "items": {` TO temp885.
    APPEND `          "type": "string"` TO temp885.
    APPEND `        }` TO temp885.
    APPEND `      },` TO temp885.
    APPEND `      "structure": {` TO temp885.
    APPEND `        "title": "Structure",` TO temp885.
    APPEND `        "description": "Structure",` TO temp885.
    APPEND `        "type": "object",` TO temp885.
    APPEND `        "properties": {` TO temp885.
    APPEND `          "field": {` TO temp885.
    APPEND `            "title": "Field",` TO temp885.
    APPEND `            "description": "Field",` TO temp885.
    APPEND `            "type": "integer",` TO temp885.
    APPEND `            "minimum": -2147483648,` TO temp885.
    APPEND `            "maximum": 2147483647` TO temp885.
    APPEND `          }` TO temp885.
    APPEND `        },` TO temp885.
    APPEND `        "additionalProperties": false` TO temp885.
    APPEND `      },` TO temp885.
    APPEND `      "table2": {` TO temp885.
    APPEND `        "title": "Table2",` TO temp885.
    APPEND `        "description": "Table2",` TO temp885.
    APPEND `        "type": "array",` TO temp885.
    APPEND `        "items": {` TO temp885.
    APPEND `          "type": "string"` TO temp885.
    APPEND `        }` TO temp885.
    APPEND `      }` TO temp885.
    APPEND `    },` TO temp885.
    APPEND `    "additionalProperties": false, ` TO temp885.
    APPEND `    "required": [ ` TO temp885.
    APPEND `      "table1" ` TO temp885.
    APPEND `    ] ` TO temp885.
    APPEND `  }` TO temp885.

    APPEND temp931 TO temp885.

    exp_schema = temp885.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD numerical_text_field.
    DATA temp932 TYPE zcl_aff_test_types=>num_text.
    DATA act_schema_co TYPE string_table.
    DATA temp933 TYPE string_table.
    DATA temp135 LIKE LINE OF temp933.
    DATA temp136 LIKE LINE OF temp933.
    DATA temp137 LIKE LINE OF temp933.
    DATA temp944 LIKE LINE OF temp933.
    DATA exp_schema LIKE temp933.
    CLEAR temp932.

    act_schema_co = test_generator->generate_type( temp932 ).

    CLEAR temp933.
    APPEND `{` TO temp933.

    temp135 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp135 TO temp933.

    temp136 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp136 TO temp933.

    temp137 = |    "$id": "{ schema_id }",|.
    APPEND temp137 TO temp933.
    APPEND `    "title": "Numerical Text Field",` TO temp933.
    APPEND `    "description": "A numerical text field of length 4",` TO temp933.
    APPEND `    "type": "string",` TO temp933.
    APPEND `    "maxLength": 4, ` TO temp933.
    APPEND `    "pattern": "^[0-9]+$"` TO temp933.
    APPEND `}` TO temp933.

    APPEND temp944 TO temp933.

    exp_schema = temp933.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_with_numbers.
    DATA temp945 TYPE zcl_aff_test_types=>structure_with_numbers.
    DATA act_schema_co TYPE string_table.
    DATA temp946 TYPE string_table.
    DATA temp138 LIKE LINE OF temp946.
    DATA temp139 LIKE LINE OF temp946.
    DATA temp140 LIKE LINE OF temp946.
    DATA temp1002 LIKE LINE OF temp946.
    DATA exp_schema LIKE temp946.
    CLEAR temp945.

    act_schema_co = test_generator->generate_type( temp945 ).

    CLEAR temp946.
    APPEND `{ ` TO temp946.

    temp138 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp138 TO temp946.

    temp139 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp139 TO temp946.

    temp140 = |    "$id": "{ schema_id }",|.
    APPEND temp140 TO temp946.
    APPEND `    "title": "Structure With Number Types",` TO temp946.
    APPEND `    "description": "This is a structure with different number types",` TO temp946.
    APPEND `    "type": "object",` TO temp946.
    APPEND `    "properties": {` TO temp946.
    APPEND `      "integer": {` TO temp946.
    APPEND `        "title": "Integer With Maximum",` TO temp946.
    APPEND `        "description": "Integer with maximum",` TO temp946.
    APPEND `        "type": "integer",` TO temp946.
    APPEND `        "minimum":-2147483648 ,` TO temp946.
    APPEND `        "maximum":10` TO temp946.
    APPEND `      },` TO temp946.
    APPEND `      "float": {` TO temp946.
    APPEND `        "title": "Float With Minimum And Exclusive Maximum",` TO temp946.
    APPEND `        "description": "Float with minimum and exclusive maximum",` TO temp946.
    APPEND `        "type": "number",` TO temp946.
    APPEND `        "minimum": -0.42,` TO temp946.
    APPEND `        "exclusiveMaximum": 100.9` TO temp946.
    APPEND `      },` TO temp946.
    APPEND `      "packedWithMultiple": {` TO temp946.
    APPEND `        "title": "Packed Number With Given Multiple",` TO temp946.
    APPEND `        "description": "Packed number with given multiple",` TO temp946.
    APPEND `        "type": "number",` TO temp946.
    APPEND `        "exclusiveMinimum": 0,` TO temp946.
    APPEND `        "maximum": 99999.90,` TO temp946.
    APPEND `        "multipleOf": 0.1 ` TO temp946.
    APPEND `      },` TO temp946.
    APPEND `      "packedWithoutMultiple": {` TO temp946.
    APPEND `        "title": "Packed Number With No Given Multiple",` TO temp946.
    APPEND `        "description": "Packed number with no given multiple",` TO temp946.
    APPEND `        "type": "number",` TO temp946.
    APPEND `        "exclusiveMinimum": 0,` TO temp946.
    APPEND `        "maximum": 999999.9,` TO temp946.
    APPEND `        "multipleOf": 0.1 ` TO temp946.
    APPEND `      },` TO temp946.
    APPEND `      "integerOut": {` TO temp946.
    APPEND `        "title": "Integer Defined Outside",` TO temp946.
    APPEND `        "description": "Integer defined outside and ABAP Doc number annotation outside",` TO temp946.
    APPEND `        "type": "integer",` TO temp946.
    APPEND `        "minimum": -25,` TO temp946.
    APPEND `        "maximum": 2147483647` TO temp946.
    APPEND `      },` TO temp946.
    APPEND `      "integerOutWithDoc": {` TO temp946.
    APPEND `        "title": "Integer Defined Outside",` TO temp946.
    APPEND `        "description": "Integer defined outside but with ABAP Doc number annotation here",` TO temp946.
    APPEND `        "type": "integer",` TO temp946.
    APPEND `        "minimum": -2147483648,` TO temp946.
    APPEND `        "maximum": 42 ` TO temp946.
    APPEND `      }` TO temp946.
    APPEND `    },` TO temp946.
    APPEND `    "additionalProperties": false ` TO temp946.
    APPEND `  }` TO temp946.

    APPEND temp1002 TO temp946.

    exp_schema = temp946.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_different_default.
    DATA temp1003 TYPE zcl_aff_test_types=>structure_different_default.
    DATA act_schema_co TYPE string_table.
    DATA temp1004 TYPE string_table.
    DATA temp141 LIKE LINE OF temp1004.
    DATA temp142 LIKE LINE OF temp1004.
    DATA temp143 LIKE LINE OF temp1004.
    DATA temp1149 LIKE LINE OF temp1004.
    DATA exp_schema LIKE temp1004.
    CLEAR temp1003.

    act_schema_co = test_generator->generate_type( temp1003 ).

    CLEAR temp1004.
    APPEND `    { ` TO temp1004.

    temp141 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp141 TO temp1004.

    temp142 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp142 TO temp1004.

    temp143 = |    "$id": "{ schema_id }",|.
    APPEND temp143 TO temp1004.
    APPEND `    "title": "Structure With Default", ` TO temp1004.
    APPEND `    "description": "Structure to test default checks in simple transformation", ` TO temp1004.
    APPEND `    "type": "object", ` TO temp1004.
    APPEND `    "properties": { ` TO temp1004.
    APPEND `      "fourByteInt": { ` TO temp1004.
    APPEND `        "title": "Four Byte Integer", ` TO temp1004.
    APPEND `        "description": "Four byte integer", ` TO temp1004.
    APPEND `        "type": "integer", ` TO temp1004.
    APPEND `        "minimum": -2147483648, ` TO temp1004.
    APPEND `        "maximum": 2147483647 , ` TO temp1004.
    APPEND `        "default": 5 ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "eightByteInt": { ` TO temp1004.
    APPEND `        "title": "Eight Byte Integer", ` TO temp1004.
    APPEND `        "description": "Eight byte integer", ` TO temp1004.
    APPEND `        "type": "integer", ` TO temp1004.
    APPEND `        "minimum": -9223372036854775808, ` TO temp1004.
    APPEND `        "maximum": 9223372036854775807 , ` TO temp1004.
    APPEND `        "default": 55 ` TO temp1004.
    APPEND `       }, ` TO temp1004.
    APPEND `      "binFloat": { ` TO temp1004.
    APPEND `        "title": "Binary Floating Point Number", ` TO temp1004.
    APPEND `        "description": "Binary floating point number", ` TO temp1004.
    APPEND `        "type": "number", ` TO temp1004.
    APPEND `        "minimum": -1.7976931348623157e308, ` TO temp1004.
    APPEND `        "maximum": 1.7976931348623157e308, ` TO temp1004.
    APPEND `        "default": 4.3 ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "byteLike": { ` TO temp1004.
    APPEND `        "title": "Byte Like", ` TO temp1004.
    APPEND `        "description": "Byte like", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "maxLength": 4, ` TO temp1004.
    APPEND `        "default": "FFFF" ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "byteLike2": { ` TO temp1004.
    APPEND `        "title": "Byte Like2", ` TO temp1004.
    APPEND `        "description": "Byte like2", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "default": "FF00FF"` TO temp1004.
    APPEND `       }, ` TO temp1004.
    APPEND `      "decimalFloat16": { ` TO temp1004.
    APPEND `        "title": "Decimal Floating Point Number", ` TO temp1004.
    APPEND `        "description": "Decimal floating point number with 16 places", ` TO temp1004.
    APPEND `        "type": "number", ` TO temp1004.
    APPEND `        "minimum": -9.999999999999999e384, ` TO temp1004.
    APPEND `        "maximum": 9.999999999999999e384, ` TO temp1004.
    APPEND `        "default": 25.26 ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "decimalFloat34": { ` TO temp1004.
    APPEND `        "title": "Decimal Floating Point Number", ` TO temp1004.
    APPEND `        "description": "Decimal floating point number with 34 places", ` TO temp1004.
    APPEND `        "type": "number", ` TO temp1004.
    APPEND `        "minimum": -9.999999999999999999999999999999999e6144, ` TO temp1004.
    APPEND `        "maximum": 9.999999999999999999999999999999999e6144, ` TO temp1004.
    APPEND `        "default": 123.05 ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "packedNumber": { ` TO temp1004.
    APPEND `        "title": "Packed Number", ` TO temp1004.
    APPEND `        "description": "Packed number", ` TO temp1004.
    APPEND `        "type": "number", ` TO temp1004.
    APPEND `        "minimum": -999.99, ` TO temp1004.
    APPEND `        "maximum": 999.99 , ` TO temp1004.
    APPEND `        "multipleOf": 0.01, ` TO temp1004.
    APPEND `        "default": 123.45 ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "numericText": { ` TO temp1004.
    APPEND `        "title": "Numeric Text Field", ` TO temp1004.
    APPEND `        "description": "Numeric text field", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "maxLength": 4, ` TO temp1004.
    APPEND `        "pattern": "^[0-9]+$", ` TO temp1004.
    APPEND `        "default": "1067" ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "characterText": { ` TO temp1004.
    APPEND `        "title": "Character Text", ` TO temp1004.
    APPEND `        "description": "Character text", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "maxLength": 5, ` TO temp1004.
    APPEND `        "default": "abcde" ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "stringText": { ` TO temp1004.
    APPEND `        "title": "String Text", ` TO temp1004.
    APPEND `        "description": "String text", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "default": "Default text" ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "dateField": { ` TO temp1004.
    APPEND `        "title": "Date", ` TO temp1004.
    APPEND `        "description": "Date", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "format": "date-time", ` TO temp1004.
    APPEND `        "default": "1972-04-01" ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "timeField": { ` TO temp1004.
    APPEND `        "title": "Time", ` TO temp1004.
    APPEND `        "description": "Time", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "format": "date-time", ` TO temp1004.
    APPEND `        "default": "20:15:00" ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "dateTimeField": { ` TO temp1004.
    APPEND `        "title": "Date Time", ` TO temp1004.
    APPEND `        "description": "Date time: No support", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "format": "date-time" ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "boolTrue": { ` TO temp1004.
    APPEND `        "title": "Boolean", ` TO temp1004.
    APPEND `        "description": "Boolean with default abap_true", ` TO temp1004.
    APPEND `        "type": "boolean", ` TO temp1004.
    APPEND `        "default": true ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "boolFalse": { ` TO temp1004.
    APPEND `        "title": "Boolean", ` TO temp1004.
    APPEND `        "description": "Boolean with default abap_false", ` TO temp1004.
    APPEND `        "type": "boolean", ` TO temp1004.
    APPEND `        "default": false ` TO temp1004.
    APPEND `      }, ` TO temp1004.
    APPEND `      "enumType": { ` TO temp1004.
    APPEND `        "title": "Enum Type", ` TO temp1004.
    APPEND `        "description": "Enum type", ` TO temp1004.
    APPEND `        "type": "string", ` TO temp1004.
    APPEND `        "enum": [ ` TO temp1004.
    APPEND `          "general", ` TO temp1004.
    APPEND `          "exitClass" ` TO temp1004.
    APPEND `        ], ` TO temp1004.
    APPEND `        "enumTitles": [ ` TO temp1004.
    APPEND `          "General", ` TO temp1004.
    APPEND `          "Exit Class" ` TO temp1004.
    APPEND `        ], ` TO temp1004.
    APPEND `        "enumDescriptions": [ ` TO temp1004.
    APPEND `          "General", ` TO temp1004.
    APPEND `          "Exit class" ` TO temp1004.
    APPEND `        ], ` TO temp1004.
    APPEND `        "default": "exitClass" ` TO temp1004.
    APPEND `      } ` TO temp1004.
    APPEND `    }, ` TO temp1004.
    APPEND `    "additionalProperties": false ` TO temp1004.
    APPEND `  } ` TO temp1004.

    APPEND temp1149 TO temp1004.

    exp_schema = temp1004.
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Annotation $default for type UTCLONG is not supported`
      exp_component_name = `STRUCTURE_DIFFERENT_DEFAULT-DATE_TIME_FIELD`
      exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD structure_with_default_problem.
    DATA temp1150 TYPE zcl_aff_test_types=>structure_with_default_problem.
    DATA act_schema_co TYPE string_table.
    DATA temp1151 TYPE string_table.
    DATA temp144 LIKE LINE OF temp1151.
    DATA temp145 LIKE LINE OF temp1151.
    DATA temp146 LIKE LINE OF temp1151.
    DATA temp1217 LIKE LINE OF temp1151.
    DATA exp_schema LIKE temp1151.
    CLEAR temp1150.

    act_schema_co = test_generator->generate_type( temp1150 ).

    CLEAR temp1151.
    APPEND `    { ` TO temp1151.

    temp144 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp144 TO temp1151.

    temp145 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp145 TO temp1151.

    temp146 = |    "$id": "{ schema_id }",|.
    APPEND temp146 TO temp1151.
    APPEND `     "title": "Structure With Default",` TO temp1151.
    APPEND `     "description": "Structure with default",` TO temp1151.
    APPEND `     "type": "object",` TO temp1151.
    APPEND `     "properties": {` TO temp1151.
    APPEND `       "integer": {` TO temp1151.
    APPEND `         "title": "Integer",` TO temp1151.
    APPEND `         "description": "Integer",` TO temp1151.
    APPEND `         "type": "integer",` TO temp1151.
    APPEND `         "minimum": -2147483648,` TO temp1151.
    APPEND `         "maximum": 2147483647,` TO temp1151.
    APPEND `         "default": 5` TO temp1151.
    APPEND `       },` TO temp1151.
    APPEND `       "stringElement": {` TO temp1151.
    APPEND `         "title": "String Element",` TO temp1151.
    APPEND `         "description": "String element with default value",` TO temp1151.
    APPEND `         "type": "string",` TO temp1151.
    APPEND `         "default": "DefaultString"` TO temp1151.
    APPEND `       },` TO temp1151.
    APPEND `       "enumRequired": {` TO temp1151.
    APPEND `         "title": "Enum Value",` TO temp1151.
    APPEND `         "description": "Enum value with default",` TO temp1151.
    APPEND `         "type": "string",` TO temp1151.
    APPEND `         "enum": [` TO temp1151.
    APPEND `           "general",` TO temp1151.
    APPEND `           "exitClass"` TO temp1151.
    APPEND `         ],` TO temp1151.
    APPEND `         "enumTitles": [` TO temp1151.
    APPEND `           "General",` TO temp1151.
    APPEND `           "Exit Class"` TO temp1151.
    APPEND `         ],` TO temp1151.
    APPEND `         "enumDescriptions": [` TO temp1151.
    APPEND `           "General",` TO temp1151.
    APPEND `           "Exit class"` TO temp1151.
    APPEND `         ],` TO temp1151.
    APPEND `         "default": "exitClass"` TO temp1151.
    APPEND `       },` TO temp1151.
    APPEND `       "enumShowAlways": {` TO temp1151.
    APPEND `         "title": "Enum Value",` TO temp1151.
    APPEND `         "description": "Enum value with default",` TO temp1151.
    APPEND `         "type": "string",` TO temp1151.
    APPEND `         "enum": [` TO temp1151.
    APPEND `           "general",` TO temp1151.
    APPEND `           "exitClass"` TO temp1151.
    APPEND `         ],` TO temp1151.
    APPEND `         "enumTitles": [` TO temp1151.
    APPEND `           "General",` TO temp1151.
    APPEND `           "Exit Class"` TO temp1151.
    APPEND `         ],` TO temp1151.
    APPEND `         "enumDescriptions": [` TO temp1151.
    APPEND `           "General",` TO temp1151.
    APPEND `           "Exit class"` TO temp1151.
    APPEND `         ],` TO temp1151.
    APPEND `         "default": "exitClass"` TO temp1151.
    APPEND `       }` TO temp1151.
    APPEND `     },` TO temp1151.
    APPEND `     "additionalProperties": false,` TO temp1151.
    APPEND `     "required": [` TO temp1151.
    APPEND `       "integer",` TO temp1151.
    APPEND `       "enumRequired"` TO temp1151.
    APPEND `     ]` TO temp1151.
    APPEND `   }` TO temp1151.

    APPEND temp1217 TO temp1151.

    exp_schema = temp1151.
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = zif_aff_log=>co_msg126
                                                              exp_component_name = `STRUCTURE_WITH_DEFAULT_PROBLEM-INTEGER`
                                                              exp_type           = zif_aff_log=>c_message_type-warning ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = zif_aff_log=>co_msg126
                                                              exp_component_name = `STRUCTURE_WITH_DEFAULT_PROBLEM-ENUM_REQUIRED`
                                                              exp_type           = zif_aff_log=>c_message_type-warning ).


  ENDMETHOD.


  METHOD nested_struc_with_default.
    DATA temp1218 TYPE zcl_aff_test_types=>nested_struc_with_default.
    DATA act_schema_co TYPE string_table.
    DATA temp1219 TYPE string_table.
    DATA temp147 LIKE LINE OF temp1219.
    DATA temp148 LIKE LINE OF temp1219.
    DATA temp149 LIKE LINE OF temp1219.
    DATA temp1268 LIKE LINE OF temp1219.
    DATA exp_schema LIKE temp1219.
    CLEAR temp1218.

    act_schema_co = test_generator->generate_type( temp1218 ).

    CLEAR temp1219.
    APPEND `    { ` TO temp1219.

    temp147 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp147 TO temp1219.

    temp148 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp148 TO temp1219.

    temp149 = |    "$id": "{ schema_id }",|.
    APPEND temp149 TO temp1219.
    APPEND `     "title": "Nested Structure", ` TO temp1219.
    APPEND `     "description": "Nested structure", ` TO temp1219.
    APPEND `     "type": "object", ` TO temp1219.
    APPEND `     "properties": { ` TO temp1219.
    APPEND `       "outerComponent": { ` TO temp1219.
    APPEND `         "title": "Outer Component", ` TO temp1219.
    APPEND `         "description": "Outer component", ` TO temp1219.
    APPEND `         "type": "integer", ` TO temp1219.
    APPEND `         "minimum": -2147483648, ` TO temp1219.
    APPEND `         "maximum": 2147483647 , ` TO temp1219.
    APPEND `         "default": 10 ` TO temp1219.
    APPEND `       }, ` TO temp1219.
    APPEND `       "middleStruc": { ` TO temp1219.
    APPEND `         "title": "Middle Structure", ` TO temp1219.
    APPEND `         "description": "Middle structure", ` TO temp1219.
    APPEND `         "type": "object", ` TO temp1219.
    APPEND `         "properties": { ` TO temp1219.
    APPEND `           "middleComponent": { ` TO temp1219.
    APPEND `             "title": "Middle Component", ` TO temp1219.
    APPEND `             "description": "Middle component", ` TO temp1219.
    APPEND `             "type": "string", ` TO temp1219.
    APPEND `             "maxLength": 4, ` TO temp1219.
    APPEND `             "default": "abcd" ` TO temp1219.
    APPEND `           }, ` TO temp1219.
    APPEND `           "innerStruc": { ` TO temp1219.
    APPEND `             "title": "Inner Structure", ` TO temp1219.
    APPEND `             "description": "Inner structure", ` TO temp1219.
    APPEND `             "type": "object", ` TO temp1219.
    APPEND `             "properties": { ` TO temp1219.
    APPEND `               "innerComponent": { ` TO temp1219.
    APPEND `                 "title": "Inner Component", ` TO temp1219.
    APPEND `                 "description": "Inner component", ` TO temp1219.
    APPEND `                 "type": "string", ` TO temp1219.
    APPEND `                 "default": "Default Value" ` TO temp1219.
    APPEND `               } ` TO temp1219.
    APPEND `             }, ` TO temp1219.
    APPEND `             "additionalProperties": false ` TO temp1219.
    APPEND `           } ` TO temp1219.
    APPEND `         }, ` TO temp1219.
    APPEND `         "additionalProperties": false ` TO temp1219.
    APPEND `       } ` TO temp1219.
    APPEND `     }, ` TO temp1219.
    APPEND `     "additionalProperties": false ` TO temp1219.
    APPEND `   } ` TO temp1219.

    APPEND temp1268 TO temp1219.

    exp_schema = temp1219.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD structure_with_wrong_default.
    DATA temp1269 TYPE zcl_aff_test_types=>structure_with_wrong_default.
    DATA act_schema_co TYPE string_table.
    DATA temp1270 TYPE string_table.
    DATA temp150 LIKE LINE OF temp1270.
    DATA temp151 LIKE LINE OF temp1270.
    DATA temp152 LIKE LINE OF temp1270.
    DATA temp1316 LIKE LINE OF temp1270.
    DATA exp_schema LIKE temp1270.
    CLEAR temp1269.

    act_schema_co = test_generator->generate_type( temp1269 ).

    CLEAR temp1270.
    APPEND `   { ` TO temp1270.

    temp150 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp150 TO temp1270.

    temp151 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp151 TO temp1270.

    temp152 = |    "$id": "{ schema_id }",|.
    APPEND temp152 TO temp1270.
    APPEND `     "title": "Structure With Wrong Default", ` TO temp1270.
    APPEND `     "description": "Structure with wrong default", ` TO temp1270.
    APPEND `     "type": "object", ` TO temp1270.
    APPEND `     "properties": { ` TO temp1270.
    APPEND `       "elementOne": { ` TO temp1270.
    APPEND `         "title": "First Element",` TO temp1270.
    APPEND `         "description": "First element", ` TO temp1270.
    APPEND `         "type": "string", ` TO temp1270.
    APPEND `         "enum": [ ` TO temp1270.
    APPEND `           "general", ` TO temp1270.
    APPEND `           "classicBadi" ` TO temp1270.
    APPEND `         ], ` TO temp1270.
    APPEND `         "enumTitles": [ ` TO temp1270.
    APPEND `           "generalCategory", ` TO temp1270.
    APPEND `           "" ` TO temp1270.
    APPEND `         ], ` TO temp1270.
    APPEND `         "enumDescriptions": [ ` TO temp1270.
    APPEND `           "General interface", ` TO temp1270.
    APPEND `           "Interface definition of a classic BAdI" ` TO temp1270.
    APPEND `         ] ` TO temp1270.
    APPEND `       }, ` TO temp1270.
    APPEND `       "elementTwo": { ` TO temp1270.
    APPEND `         "title": "Second Element", ` TO temp1270.
    APPEND `         "description": "Second element", ` TO temp1270.
    APPEND `         "type": "string", ` TO temp1270.
    APPEND `         "enum": [ ` TO temp1270.
    APPEND `           "general", ` TO temp1270.
    APPEND `           "classicBadi" ` TO temp1270.
    APPEND `         ], ` TO temp1270.
    APPEND `         "enumTitles": [ ` TO temp1270.
    APPEND `           "generalCategory", ` TO temp1270.
    APPEND `           "" ` TO temp1270.
    APPEND `         ], ` TO temp1270.
    APPEND `         "enumDescriptions": [ ` TO temp1270.
    APPEND `           "General interface", ` TO temp1270.
    APPEND `           "Interface definition of a classic BAdI" ` TO temp1270.
    APPEND `         ] ` TO temp1270.
    APPEND `       } ` TO temp1270.
    APPEND `     }, ` TO temp1270.
    APPEND `     "additionalProperties": false ` TO temp1270.
    APPEND `   } ` TO temp1270.

    APPEND temp1316 TO temp1270.

    exp_schema = temp1270.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = 'Component WRONG_COMPONENT of constant ENUM_VALUES in ABAP Doc link doesn''t exist'
                                                              exp_type           = zif_aff_log=>c_message_type-warning
                                                              exp_component_name = `STRUCTURE_WITH_WRONG_DEFAULT-ELEMENT_ONE` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = `Title is missing`
                                                              exp_type           = zif_aff_log=>c_message_type-info
                                                              exp_component_name = `ENUM_VALUES-CLASSIC_BADI` ).
  ENDMETHOD.


  METHOD element_with_callbackclas.
    DATA temp1317 TYPE string_table.
    DATA temp1322 TYPE zcl_aff_test_types=>simple_callback.
    DATA act_schema TYPE string_table.
    DATA temp1323 TYPE string_table.
    DATA temp153 LIKE LINE OF temp1323.
    DATA temp154 LIKE LINE OF temp1323.
    DATA temp155 LIKE LINE OF temp1323.
    DATA temp1333 LIKE LINE OF temp1323.
    DATA exp_schema LIKE temp1323.
    CLEAR temp1317.
    APPEND `"title": "myStringName",` TO temp1317.
    APPEND `"description": "This is a String",` TO temp1317.
    APPEND `"type": "string",` TO temp1317.
    APPEND `"maxLength": 3` TO temp1317.
    zcl_aff_test_types=>subschema = temp1317.


    CLEAR temp1322.

    act_schema = test_generator->generate_type( temp1322 ).

    CLEAR temp1323.
    APPEND `{` TO temp1323.

    temp153 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp153 TO temp1323.

    temp154 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp154 TO temp1323.

    temp155 = |    "$id": "{ schema_id }",|.
    APPEND temp155 TO temp1323.
    APPEND `    "title": "myStringName",` TO temp1323.
    APPEND `    "description": "This is a String",` TO temp1323.
    APPEND `    "type": "string",` TO temp1323.
    APPEND `    "maxLength": 3` TO temp1323.
    APPEND `}` TO temp1323.

    APPEND temp1333 TO temp1323.

    exp_schema = temp1323.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD simple_table_with_callbackclas.
    DATA temp1334 TYPE string_table.
    DATA temp1344 TYPE zcl_aff_test_types=>table_callback.
    DATA act_schema TYPE string_table.
    DATA temp1345 TYPE string_table.
    DATA temp156 LIKE LINE OF temp1345.
    DATA temp157 LIKE LINE OF temp1345.
    DATA temp158 LIKE LINE OF temp1345.
    DATA temp1360 LIKE LINE OF temp1345.
    DATA exp_schema LIKE temp1345.
    CLEAR temp1334.
    APPEND `"title": "my_table",` TO temp1334.
    APPEND `"description": "A standard table of strings",` TO temp1334.
    APPEND `"type": "array",` TO temp1334.
    APPEND `"items": {` TO temp1334.
    APPEND `  "title": "myStringName",` TO temp1334.
    APPEND `  "description": "This is a String",` TO temp1334.
    APPEND `  "type": "string",` TO temp1334.
    APPEND `  "maxLength": 3` TO temp1334.
    APPEND `}` TO temp1334.
    zcl_aff_test_types=>subschema = temp1334.


    CLEAR temp1344.

    act_schema = test_generator->generate_type( temp1344 ).

    CLEAR temp1345.
    APPEND `{` TO temp1345.

    temp156 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp156 TO temp1345.

    temp157 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp157 TO temp1345.

    temp158 = |    "$id": "{ schema_id }",|.
    APPEND temp158 TO temp1345.
    APPEND `    "title": "my_table",` TO temp1345.
    APPEND `    "description": "A standard table of strings",` TO temp1345.
    APPEND `    "type": "array",` TO temp1345.
    APPEND `    "items": {` TO temp1345.
    APPEND `        "title": "myStringName",` TO temp1345.
    APPEND `        "description": "This is a String",` TO temp1345.
    APPEND `        "type": "string",` TO temp1345.
    APPEND `        "maxLength": 3` TO temp1345.
    APPEND `    }` TO temp1345.
    APPEND `}` TO temp1345.

    APPEND temp1360 TO temp1345.

    exp_schema = temp1345.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD table_with_call_of_struc.
    DATA temp1361 TYPE string_table.
    DATA temp1386 TYPE zcl_aff_test_types=>table_callback.
    DATA act_schema TYPE string_table.
    DATA temp1387 TYPE string_table.
    DATA temp159 LIKE LINE OF temp1387.
    DATA temp160 LIKE LINE OF temp1387.
    DATA temp161 LIKE LINE OF temp1387.
    DATA temp1417 LIKE LINE OF temp1387.
    DATA exp_schema LIKE temp1387.
    CLEAR temp1361.
    APPEND `"title": "my_table_callback",` TO temp1361.
    APPEND `"description": "A standard table of my_structure",` TO temp1361.
    APPEND `"type": "array",` TO temp1361.
    APPEND `"items": {` TO temp1361.
    APPEND `  "title": "mySimpleStructureWithFallback",` TO temp1361.
    APPEND `  "description": "This is a simple structure",` TO temp1361.
    APPEND `  "type": "object",` TO temp1361.
    APPEND `  "properties": {` TO temp1361.
    APPEND `    "myFirstElement": {` TO temp1361.
    APPEND `    "title": "myStringName",` TO temp1361.
    APPEND `    "description": "This is a String",` TO temp1361.
    APPEND `    "type": "string",` TO temp1361.
    APPEND `    "minLength": 2` TO temp1361.
    APPEND `  },` TO temp1361.
    APPEND `  "mySecondElement": {` TO temp1361.
    APPEND `    "title": "mySecondElement",` TO temp1361.
    APPEND `    "description": "This is the second element",` TO temp1361.
    APPEND `    "type": "integer",` TO temp1361.
    APPEND `    "minimum": -2147483648,` TO temp1361.
    APPEND `    "maximum": 2147483647` TO temp1361.
    APPEND `    }` TO temp1361.
    APPEND `  },` TO temp1361.
    APPEND `  "additionalProperties": false` TO temp1361.
    APPEND `}` TO temp1361.
    zcl_aff_test_types=>subschema = temp1361.


    CLEAR temp1386.

    act_schema = test_generator->generate_type( temp1386 ).

    CLEAR temp1387.
    APPEND `{` TO temp1387.

    temp159 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp159 TO temp1387.

    temp160 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp160 TO temp1387.

    temp161 = |    "$id": "{ schema_id }",|.
    APPEND temp161 TO temp1387.
    APPEND `    "title": "my_table_callback",` TO temp1387.
    APPEND `    "description": "A standard table of my_structure",` TO temp1387.
    APPEND `    "type": "array",` TO temp1387.
    APPEND `    "items": {` TO temp1387.
    APPEND `        "title": "mySimpleStructureWithFallback",` TO temp1387.
    APPEND `        "description": "This is a simple structure",` TO temp1387.
    APPEND `        "type": "object",` TO temp1387.
    APPEND `        "properties": {` TO temp1387.
    APPEND `            "myFirstElement": {` TO temp1387.
    APPEND `                "title": "myStringName",` TO temp1387.
    APPEND `                "description": "This is a String",` TO temp1387.
    APPEND `                "type": "string",` TO temp1387.
    APPEND `                "minLength": 2` TO temp1387.
    APPEND `            },` TO temp1387.
    APPEND `            "mySecondElement": {` TO temp1387.
    APPEND `                "title": "mySecondElement",` TO temp1387.
    APPEND `                "description": "This is the second element",` TO temp1387.
    APPEND `                "type": "integer",` TO temp1387.
    APPEND `                "minimum": -2147483648,` TO temp1387.
    APPEND `                "maximum": 2147483647` TO temp1387.
    APPEND `            }` TO temp1387.
    APPEND `        },` TO temp1387.
    APPEND `        "additionalProperties": false` TO temp1387.
    APPEND `    }` TO temp1387.
    APPEND `}` TO temp1387.

    APPEND temp1417 TO temp1387.

    exp_schema = temp1387.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD nested_table_with_callback.
    DATA temp1418 TYPE string_table.
    DATA temp1432 TYPE zcl_aff_test_types=>table_call_of_table.
    DATA act_schema_co TYPE string_table.
    DATA temp1433 TYPE string_table.
    DATA temp162 LIKE LINE OF temp1433.
    DATA temp1452 LIKE LINE OF temp1433.
    DATA exp_schema LIKE temp1433.
    CLEAR temp1418.
    APPEND `"title": "my_table_of_table_callback", ` TO temp1418.
    APPEND `"description": "A standard table of my_table", ` TO temp1418.
    APPEND `"type": "array", ` TO temp1418.
    APPEND `"items": { ` TO temp1418.
    APPEND `  "title": "nestedTable", ` TO temp1418.
    APPEND `  "description": "This is the inner Table", ` TO temp1418.
    APPEND `  "type": "array", ` TO temp1418.
    APPEND `  "items": { ` TO temp1418.
    APPEND `    "title": "string", ` TO temp1418.
    APPEND `    "description": "string", ` TO temp1418.
    APPEND `    "type": "string" ` TO temp1418.
    APPEND `    } ` TO temp1418.
    APPEND `  } ` TO temp1418.
    zcl_aff_test_types=>subschema = temp1418.

    CLEAR temp1432.

    act_schema_co = test_generator->generate_type( temp1432 ).

    CLEAR temp1433.
    APPEND ` { ` TO temp1433.

    temp162 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp162 TO temp1433.
    APPEND `    "$schema": "https://json-schema.org/draft/2020-12/schema", ` TO temp1433.
    APPEND `    "$id": "schema/id.json", ` TO temp1433.
    APPEND `    "title": "my_table_of_table_callback", ` TO temp1433.
    APPEND `    "description": "A standard table of my_table", ` TO temp1433.
    APPEND `    "type": "array", ` TO temp1433.
    APPEND `    "items": { ` TO temp1433.
    APPEND `      "title": "nestedTable", ` TO temp1433.
    APPEND `      "description": "This is the inner Table", ` TO temp1433.
    APPEND `      "type": "array", ` TO temp1433.
    APPEND `      "items": { ` TO temp1433.
    APPEND `        "title": "string", ` TO temp1433.
    APPEND `        "description": "string", ` TO temp1433.
    APPEND `        "type": "string" ` TO temp1433.
    APPEND `      } ` TO temp1433.
    APPEND `    } ` TO temp1433.
    APPEND `  } ` TO temp1433.

    APPEND temp1452 TO temp1433.

    exp_schema = temp1433.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema_co exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD table_of_struc_with_callback.
    DATA temp1453 TYPE string_table.
    DATA temp1464 TYPE zcl_aff_test_types=>table_of_struc_with_callback.
    DATA act_schema TYPE string_table.
    DATA temp1465 TYPE string_table.
    DATA temp163 LIKE LINE OF temp1465.
    DATA temp164 LIKE LINE OF temp1465.
    DATA temp165 LIKE LINE OF temp1465.
    DATA temp1486 LIKE LINE OF temp1465.
    DATA exp_schema LIKE temp1465.
    CLEAR temp1453.
    APPEND `"title": "myStructureFall",` TO temp1453.
    APPEND `"description": "myStructure",` TO temp1453.
    APPEND `"type": "object",` TO temp1453.
    APPEND `"properties": {` TO temp1453.
    APPEND `  "myElement": {` TO temp1453.
    APPEND `    "title": "myElement",` TO temp1453.
    APPEND `    "description": "myElement",` TO temp1453.
    APPEND `    "type": "string"` TO temp1453.
    APPEND `  }` TO temp1453.
    APPEND `}` TO temp1453.
    zcl_aff_test_types=>subschema = temp1453.


    CLEAR temp1464.

    act_schema = test_generator->generate_type( temp1464 ).

    CLEAR temp1465.
    APPEND `{` TO temp1465.

    temp163 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp163 TO temp1465.

    temp164 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp164 TO temp1465.

    temp165 = |    "$id": "{ schema_id }",|.
    APPEND temp165 TO temp1465.
    APPEND `    "title": "my_table",` TO temp1465.
    APPEND `    "description": "A standard table of my_structure_with_callback",` TO temp1465.
    APPEND `    "type": "array",` TO temp1465.
    APPEND `    "items": {` TO temp1465.
    APPEND `        "title": "myStructureFall",` TO temp1465.
    APPEND `        "description": "myStructure",` TO temp1465.
    APPEND `        "type": "object",` TO temp1465.
    APPEND `        "properties": {` TO temp1465.
    APPEND `            "myElement": {` TO temp1465.
    APPEND `                "title": "myElement",` TO temp1465.
    APPEND `                "description": "myElement",` TO temp1465.
    APPEND `                "type": "string"` TO temp1465.
    APPEND `            }` TO temp1465.
    APPEND `        }` TO temp1465.
    APPEND `    }` TO temp1465.
    APPEND `}` TO temp1465.

    APPEND temp1486 TO temp1465.

    exp_schema = temp1465.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD struct_with_table_callback.
    DATA temp1487 TYPE string_table.
    DATA temp1499 TYPE zcl_aff_test_types=>struc_of_table_with_callback.
    DATA act_schema TYPE string_table.
    DATA temp1500 TYPE string_table.
    DATA temp166 LIKE LINE OF temp1500.
    DATA temp167 LIKE LINE OF temp1500.
    DATA temp168 LIKE LINE OF temp1500.
    DATA temp1533 LIKE LINE OF temp1500.
    DATA exp_schema LIKE temp1500.
    CLEAR temp1487.
    APPEND `"elementTableCallback": {` TO temp1487.
    APPEND `  "title": "myTableWithCallback",` TO temp1487.
    APPEND `  "description": "A standard table of strings",` TO temp1487.
    APPEND `  "type": "array",` TO temp1487.
    APPEND `  "items": {` TO temp1487.
    APPEND `    "title": "myStringName",` TO temp1487.
    APPEND `    "description": "This is a String",` TO temp1487.
    APPEND `    "type": "string",` TO temp1487.
    APPEND `    "maxLength": 3` TO temp1487.
    APPEND `  }` TO temp1487.
    APPEND `}` TO temp1487.
    zcl_aff_test_types=>subschema = temp1487.


    CLEAR temp1499.

    act_schema = test_generator->generate_type( temp1499 ).

    CLEAR temp1500.
    APPEND `{` TO temp1500.

    temp166 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp166 TO temp1500.

    temp167 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp167 TO temp1500.

    temp168 = |    "$id": "{ schema_id }",|.
    APPEND temp168 TO temp1500.
    APPEND `    "title": "mySimpleStructure",` TO temp1500.
    APPEND `    "description": "This is a simple structure",` TO temp1500.
    APPEND `    "type": "object",` TO temp1500.
    APPEND `    "properties": {` TO temp1500.
    APPEND `        "elementTableCallback": {` TO temp1500.
    APPEND `            "title": "myTableWithCallback",` TO temp1500.
    APPEND `            "description": "A standard table of strings",` TO temp1500.
    APPEND `            "type": "array",` TO temp1500.
    APPEND `            "items": {` TO temp1500.
    APPEND `                "title": "myStringName",` TO temp1500.
    APPEND `                "description": "This is a String",` TO temp1500.
    APPEND `                "type": "string",` TO temp1500.
    APPEND `                "maxLength": 3` TO temp1500.
    APPEND `            }` TO temp1500.
    APPEND `        },` TO temp1500.
    APPEND `        "mySecondElement": {` TO temp1500.
    APPEND `            "title": "Second Element",` TO temp1500.
    APPEND `            "description": "This is the second element",` TO temp1500.
    APPEND `            "type": "integer",` TO temp1500.
    APPEND `            "minimum": -2147483648,` TO temp1500.
    APPEND `            "maximum": 2147483647` TO temp1500.
    APPEND `        }` TO temp1500.
    APPEND `    },` TO temp1500.
    APPEND `    "additionalProperties": false,` TO temp1500.
    APPEND `    "required": [ ` TO temp1500.
    APPEND `     "elementTableCallback" ` TO temp1500.
    APPEND `  ]` TO temp1500.
    APPEND `}` TO temp1500.

    APPEND temp1533 TO temp1500.

    exp_schema = temp1500.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

  METHOD struc_with_struc_callback.
    DATA temp1534 TYPE string_table.
    DATA temp1550 TYPE zcl_aff_test_types=>struc_in_struc_with_callback.
    DATA act_schema TYPE string_table.
    DATA temp1551 TYPE string_table.
    DATA temp169 LIKE LINE OF temp1551.
    DATA temp170 LIKE LINE OF temp1551.
    DATA temp171 LIKE LINE OF temp1551.
    DATA temp1593 LIKE LINE OF temp1551.
    DATA exp_schema LIKE temp1551.
    CLEAR temp1534.
    APPEND `"elementStructureCallback": {` TO temp1534.
    APPEND `  "title": "myStrucWithCallback",` TO temp1534.
    APPEND `  "description": "A simple structure",` TO temp1534.
    APPEND `  "type": "object",` TO temp1534.
    APPEND `  "properties": {` TO temp1534.
    APPEND `    "myElement": {` TO temp1534.
    APPEND `      "title": "element",` TO temp1534.
    APPEND `      "description": "This is a integer",` TO temp1534.
    APPEND `      "type": "integer",` TO temp1534.
    APPEND `      "minimum": -2147483648,` TO temp1534.
    APPEND `      "maximum": 2147483647` TO temp1534.
    APPEND `    }` TO temp1534.
    APPEND `  },` TO temp1534.
    APPEND `  "additionalProperties": false` TO temp1534.
    APPEND `}` TO temp1534.
    zcl_aff_test_types=>subschema = temp1534.


    CLEAR temp1550.

    act_schema = test_generator->generate_type( temp1550 ).

    CLEAR temp1551.
    APPEND `{` TO temp1551.

    temp169 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp169 TO temp1551.

    temp170 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp170 TO temp1551.

    temp171 = |    "$id": "{ schema_id }",|.
    APPEND temp171 TO temp1551.
    APPEND `    "title": "mySimpleStructure",` TO temp1551.
    APPEND `    "description": "This is a simple structure",` TO temp1551.
    APPEND `    "type": "object",` TO temp1551.
    APPEND `    "properties": {` TO temp1551.
    APPEND `        "myFirstElement": {` TO temp1551.
    APPEND `            "title": "First Element",` TO temp1551.
    APPEND `            "description": "This is the first element",` TO temp1551.
    APPEND `            "type": "string"` TO temp1551.
    APPEND `        },` TO temp1551.
    APPEND `        "elementStructureCallback": {` TO temp1551.
    APPEND `            "title": "myStrucWithCallback",` TO temp1551.
    APPEND `            "description": "A simple structure",` TO temp1551.
    APPEND `            "type": "object",` TO temp1551.
    APPEND `            "properties": {` TO temp1551.
    APPEND `                "myElement": {` TO temp1551.
    APPEND `                    "title": "element",` TO temp1551.
    APPEND `                    "description": "This is a integer",` TO temp1551.
    APPEND `                    "type": "integer",` TO temp1551.
    APPEND `                    "minimum": -2147483648,` TO temp1551.
    APPEND `                    "maximum": 2147483647` TO temp1551.
    APPEND `                }` TO temp1551.
    APPEND `            },` TO temp1551.
    APPEND `            "additionalProperties": false` TO temp1551.
    APPEND `         },` TO temp1551.
    APPEND `        "myThirdElement": {` TO temp1551.
    APPEND `            "title": "Third Element",` TO temp1551.
    APPEND `            "description": "This is the third element",` TO temp1551.
    APPEND `            "type": "integer",` TO temp1551.
    APPEND `            "minimum": -2147483648,` TO temp1551.
    APPEND `            "maximum": 2147483647` TO temp1551.
    APPEND `        }` TO temp1551.
    APPEND `    },` TO temp1551.
    APPEND `    "additionalProperties": false,` TO temp1551.
    APPEND `    "required": [ ` TO temp1551.
    APPEND `     "elementStructureCallback" ` TO temp1551.
    APPEND `  ]` TO temp1551.
    APPEND `}` TO temp1551.

    APPEND temp1593 TO temp1551.

    exp_schema = temp1551.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD element_in_structure_callback.
    DATA temp1594 TYPE string_table.
    DATA temp1601 TYPE zcl_aff_test_types=>structure_with_elem_callback.
    DATA act_schema TYPE string_table.
    DATA temp1602 TYPE string_table.
    DATA temp172 LIKE LINE OF temp1602.
    DATA temp173 LIKE LINE OF temp1602.
    DATA temp174 LIKE LINE OF temp1602.
    DATA temp1630 LIKE LINE OF temp1602.
    DATA exp_schema LIKE temp1602.
    CLEAR temp1594.
    APPEND `"elementCallback": {` TO temp1594.
    APPEND `  "title": "myStringName",` TO temp1594.
    APPEND `  "description": "This is a String",` TO temp1594.
    APPEND `  "type": "string",` TO temp1594.
    APPEND `  "minLength": 2` TO temp1594.
    APPEND `}` TO temp1594.
    zcl_aff_test_types=>subschema = temp1594.


    CLEAR temp1601.

    act_schema = test_generator->generate_type( temp1601 ).

    CLEAR temp1602.
    APPEND `{` TO temp1602.

    temp172 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp172 TO temp1602.

    temp173 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp173 TO temp1602.

    temp174 = |    "$id": "{ schema_id }",|.
    APPEND temp174 TO temp1602.
    APPEND `    "title": "Simple Structure",` TO temp1602.
    APPEND `    "description": "This is a simple structure",` TO temp1602.
    APPEND `    "type": "object",` TO temp1602.
    APPEND `    "properties": {` TO temp1602.
    APPEND `        "elementCallback": {` TO temp1602.
    APPEND `            "title": "myStringName",` TO temp1602.
    APPEND `            "description": "This is a String",` TO temp1602.
    APPEND `            "type": "string",` TO temp1602.
    APPEND `            "minLength": 2` TO temp1602.
    APPEND `        },` TO temp1602.
    APPEND `        "mySecondElement": {` TO temp1602.
    APPEND `            "title": "Second Element",` TO temp1602.
    APPEND `            "description": "This is the second element",` TO temp1602.
    APPEND `            "type": "integer",` TO temp1602.
    APPEND `            "minimum": -2147483648,` TO temp1602.
    APPEND `            "maximum": 2147483647` TO temp1602.
    APPEND `        }` TO temp1602.
    APPEND `    },` TO temp1602.
    APPEND `    "additionalProperties": false,` TO temp1602.
    APPEND `    "required": [` TO temp1602.
    APPEND `      "elementCallback"` TO temp1602.
    APPEND `    ]` TO temp1602.
    APPEND `}` TO temp1602.

    APPEND temp1630 TO temp1602.

    exp_schema = temp1602.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.


  METHOD structure_with_wrong_callback.
    DATA temp1631 TYPE zcl_aff_test_types=>structure_with_wrong_callback.
    DATA act_schema TYPE string_table.
    DATA temp1632 TYPE string_table.
    DATA temp175 LIKE LINE OF temp1632.
    DATA temp176 LIKE LINE OF temp1632.
    DATA temp177 LIKE LINE OF temp1632.
    DATA temp1660 LIKE LINE OF temp1632.
    DATA exp_schema LIKE temp1632.
    CLEAR temp1631.

    act_schema = test_generator->generate_type( temp1631 ).

    CLEAR temp1632.
    APPEND `   { ` TO temp1632.

    temp175 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp175 TO temp1632.

    temp176 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp176 TO temp1632.

    temp177 = |    "$id": "{ schema_id }",|.
    APPEND temp177 TO temp1632.
    APPEND `     "title": "Structure With Wrong Callback", ` TO temp1632.
    APPEND `     "description": "Structure with wrong callback", ` TO temp1632.
    APPEND `     "type": "object", ` TO temp1632.
    APPEND `     "properties": { ` TO temp1632.
    APPEND `       "myFirstElement": { ` TO temp1632.
    APPEND `         "title": "First Element", ` TO temp1632.
    APPEND `         "description": "This is the first element", ` TO temp1632.
    APPEND `         "type": "string", ` TO temp1632.
    APPEND `         "minLength": 2 ` TO temp1632.
    APPEND `       }, ` TO temp1632.
    APPEND `       "mySecondElement": { ` TO temp1632.
    APPEND `         "title": "Second Element",` TO temp1632.
    APPEND `         "description": "This is the second element",` TO temp1632.
    APPEND `         "type": "integer", ` TO temp1632.
    APPEND `         "minimum": -2147483648, ` TO temp1632.
    APPEND `         "maximum": 4 ` TO temp1632.
    APPEND `       } ` TO temp1632.
    APPEND `     }, ` TO temp1632.
    APPEND `     "additionalProperties": false, ` TO temp1632.
    APPEND `     "required": [` TO temp1632.
    APPEND `       "myFirstElement"` TO temp1632.
    APPEND `     ] ` TO temp1632.
    APPEND `   } ` TO temp1632.

    APPEND temp1660 TO temp1632.

    exp_schema = temp1632.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text( log                = log
                                                              exp_text           = zif_aff_log=>co_msg106
                                                              exp_component_name = `STRUCTURE_WITH_WRONG_CALLBACK-MY_FIRST_ELEMENT`
                                                              exp_type           = zif_aff_log=>c_message_type-warning ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = |Annotation { zcl_aff_abap_doc_parser=>abap_doc_annotation-callback_class } was used incorrectly|
      exp_component_name = `STRUCTURE_WITH_WRONG_CALLBACK-MY_SECOND_ELEMENT`
      exp_type           = zif_aff_log=>c_message_type-warning ).
  ENDMETHOD.

  METHOD structure_no_title_descr.
    DATA temp1661 TYPE zcl_aff_test_types=>structure_no_title_descr.
    DATA act_schema TYPE string_table.
    DATA temp1662 TYPE string_table.
    DATA temp178 LIKE LINE OF temp1662.
    DATA temp179 LIKE LINE OF temp1662.
    DATA temp180 LIKE LINE OF temp1662.
    DATA temp1696 LIKE LINE OF temp1662.
    DATA exp_schema LIKE temp1662.
    CLEAR temp1661.

    act_schema = test_generator->generate_type( temp1661 ).

    CLEAR temp1662.
    APPEND `   { ` TO temp1662.

    temp178 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp178 TO temp1662.

    temp179 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp179 TO temp1662.

    temp180 = |    "$id": "{ schema_id }",|.
    APPEND temp180 TO temp1662.
    APPEND `    "type": "object", ` TO temp1662.
    APPEND `    "properties": { ` TO temp1662.
    APPEND `      "field1": { ` TO temp1662.
    APPEND `        "description": "Only description",` TO temp1662.
    APPEND `        "type": "string" ` TO temp1662.
    APPEND `    }, ` TO temp1662.
    APPEND `    "innerStruc": { ` TO temp1662.
    APPEND `      "title": "Only Title",` TO temp1662.
    APPEND `       "type": "object", ` TO temp1662.
    APPEND `       "properties": { ` TO temp1662.
    APPEND `         "innerField": { ` TO temp1662.
    APPEND `           "title": "Inner Field",` TO temp1662.
    APPEND `           "description": "Inner field",` TO temp1662.
    APPEND `           "type": "integer", ` TO temp1662.
    APPEND `           "minimum": -2147483648, ` TO temp1662.
    APPEND `           "maximum": 2147483647 ` TO temp1662.
    APPEND `         } ` TO temp1662.
    APPEND `       }, ` TO temp1662.
    APPEND `       "additionalProperties": false ` TO temp1662.
    APPEND `     }, ` TO temp1662.
    APPEND `     "innerTable": { ` TO temp1662.
    APPEND `       "type": "array", ` TO temp1662.
    APPEND `       "items": { ` TO temp1662.
    APPEND `         "type": "string" ` TO temp1662.
    APPEND `       } ` TO temp1662.
    APPEND `     } ` TO temp1662.
    APPEND `   }, ` TO temp1662.
    APPEND `   "additionalProperties": false ` TO temp1662.
    APPEND ` } ` TO temp1662.

    APPEND temp1696 TO temp1662.

    exp_schema = temp1662.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR-FIELD1` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR-INNER_STRUC` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR-INNER_TABLE` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_NO_TITLE_DESCR-INNER_TABLE` ).
  ENDMETHOD.

  METHOD element_no_title_descr.
    DATA temp1697 TYPE zcl_aff_test_types=>element_no_title_descr.
    DATA act_schema TYPE string_table.
    DATA temp1698 TYPE string_table.
    DATA temp181 LIKE LINE OF temp1698.
    DATA temp182 LIKE LINE OF temp1698.
    DATA temp183 LIKE LINE OF temp1698.
    DATA temp1705 LIKE LINE OF temp1698.
    DATA exp_schema LIKE temp1698.
    CLEAR temp1697.

    act_schema = test_generator->generate_type( temp1697 ).

    CLEAR temp1698.
    APPEND `   { ` TO temp1698.

    temp181 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp181 TO temp1698.

    temp182 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp182 TO temp1698.

    temp183 = |    "$id": "{ schema_id }",|.
    APPEND temp183 TO temp1698.
    APPEND `    "type": "string" ` TO temp1698.
    APPEND ` } ` TO temp1698.

    APPEND temp1705 TO temp1698.

    exp_schema = temp1698.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `ELEMENT_NO_TITLE_DESCR` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `ELEMENT_NO_TITLE_DESCR` ).
  ENDMETHOD.

  METHOD table_no_title_descr.
    DATA temp1706 TYPE zcl_aff_test_types=>table_no_title_descr.
    DATA act_schema TYPE string_table.
    DATA temp1707 TYPE string_table.
    DATA temp184 LIKE LINE OF temp1707.
    DATA temp185 LIKE LINE OF temp1707.
    DATA temp186 LIKE LINE OF temp1707.
    DATA temp1717 LIKE LINE OF temp1707.
    DATA exp_schema LIKE temp1707.
    CLEAR temp1706.

    act_schema = test_generator->generate_type( temp1706 ).

    CLEAR temp1707.
    APPEND `   { ` TO temp1707.

    temp184 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp184 TO temp1707.

    temp185 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp185 TO temp1707.

    temp186 = |    "$id": "{ schema_id }",|.
    APPEND temp186 TO temp1707.
    APPEND `    "type": "array", ` TO temp1707.
    APPEND `    "items": {` TO temp1707.
    APPEND `      "type": "string" ` TO temp1707.
    APPEND `    } ` TO temp1707.
    APPEND ` } ` TO temp1707.

    APPEND temp1717 TO temp1707.

    exp_schema = temp1707.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `TABLE_NO_TITLE_DESCR` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `TABLE_NO_TITLE_DESCR` ).
  ENDMETHOD.

  METHOD structure_with_include.
    DATA temp1718 TYPE zcl_aff_test_types=>structure_with_include.
    DATA act_schema TYPE string_table.
    DATA temp1719 TYPE string_table.
    DATA temp187 LIKE LINE OF temp1719.
    DATA temp188 LIKE LINE OF temp1719.
    DATA temp189 LIKE LINE OF temp1719.
    DATA temp1795 LIKE LINE OF temp1719.
    DATA exp_schema LIKE temp1719.
    CLEAR temp1718.

    act_schema = test_generator->generate_type( temp1718 ).

    CLEAR temp1719.
    APPEND `   { ` TO temp1719.

    temp187 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp187 TO temp1719.

    temp188 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp188 TO temp1719.

    temp189 = |    "$id": "{ schema_id }",|.
    APPEND temp189 TO temp1719.
    APPEND `    "title": "Structure With Include", ` TO temp1719.
    APPEND `    "description": "Structure with include", ` TO temp1719.
    APPEND `    "type": "object", ` TO temp1719.
    APPEND `    "properties": { ` TO temp1719.
    APPEND `      "firstElement": { ` TO temp1719.
    APPEND `        "title": "First Element In Include",` TO temp1719.
    APPEND `        "type": "string" ` TO temp1719.
    APPEND `      }, ` TO temp1719.
    APPEND `      "secondElement": { ` TO temp1719.
    APPEND `        "title": "mySimpleStructure",` TO temp1719.
    APPEND `        "description": "This is a simple structure",` TO temp1719.
    APPEND `         "type": "object", ` TO temp1719.
    APPEND `         "properties": {` TO temp1719.
    APPEND `           "myFirstElement": {` TO temp1719.
    APPEND `              "title": "First Element",` TO temp1719.
    APPEND `              "description": "This is the first element",` TO temp1719.
    APPEND `              "type": "string",` TO temp1719.
    APPEND `              "minLength": 4` TO temp1719.
    APPEND `            },` TO temp1719.
    APPEND `            "mySecondElement": {` TO temp1719.
    APPEND `              "title": "Second Element",` TO temp1719.
    APPEND `              "description": "This is the second element",` TO temp1719.
    APPEND `              "type": "integer",` TO temp1719.
    APPEND `              "minimum": -2147483648,` TO temp1719.
    APPEND `              "maximum": 2147483647` TO temp1719.
    APPEND `            }` TO temp1719.
    APPEND `         },` TO temp1719.
    APPEND `         "additionalProperties": false` TO temp1719.
    APPEND `      },` TO temp1719.
    APPEND `      "thirdElement": {` TO temp1719.
    APPEND `        "title": "Third Element In Include",` TO temp1719.
    APPEND `        "description": "Third element in include",` TO temp1719.
    APPEND `        "type": "integer",` TO temp1719.
    APPEND `        "minimum": -2147483648,` TO temp1719.
    APPEND `        "maximum": 2147483647,` TO temp1719.
    APPEND `        "default": 10` TO temp1719.
    APPEND `      },` TO temp1719.
    APPEND `      "otherElement": { ` TO temp1719.
    APPEND `        "description": "Other element",` TO temp1719.
    APPEND `        "type": "integer",` TO temp1719.
    APPEND `        "minimum": -2147483648,` TO temp1719.
    APPEND `        "maximum": 2147483647` TO temp1719.
    APPEND `      },` TO temp1719.
    APPEND `      "otherStructure": { ` TO temp1719.
    APPEND `        "title": "Other structure",` TO temp1719.
    APPEND `        "description": "Other Structure",` TO temp1719.
    APPEND `        "type": "object", ` TO temp1719.
    APPEND `         "properties": {` TO temp1719.
    APPEND `           "myFirstElement": {` TO temp1719.
    APPEND `             "title": "First Element",` TO temp1719.
    APPEND `             "description": "This is the first element",` TO temp1719.
    APPEND `             "type": "string",` TO temp1719.
    APPEND `             "minLength": 4` TO temp1719.
    APPEND `           },` TO temp1719.
    APPEND `           "mySecondElement": {` TO temp1719.
    APPEND `             "title": "Second Element",` TO temp1719.
    APPEND `             "description": "This is the second element",` TO temp1719.
    APPEND `             "type": "integer",` TO temp1719.
    APPEND `             "minimum": -2147483648,` TO temp1719.
    APPEND `             "maximum": 2147483647` TO temp1719.
    APPEND `           }` TO temp1719.
    APPEND `         },` TO temp1719.
    APPEND `        "additionalProperties": false` TO temp1719.
    APPEND `      }` TO temp1719.
    APPEND `   }, ` TO temp1719.
    APPEND `   "additionalProperties": false, ` TO temp1719.
    APPEND `   "required": [` TO temp1719.
    APPEND `     "firstElement",` TO temp1719.
    APPEND `     "otherElement"` TO temp1719.
    APPEND `   ]` TO temp1719.
    APPEND ` } ` TO temp1719.

    APPEND temp1795 TO temp1719.

    exp_schema = temp1719.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Title is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `STRUCTURE_WITH_INCLUDE-OTHER_ELEMENT` ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = `Description is missing`
      exp_type           = zif_aff_log=>c_message_type-info
      exp_component_name = `TY_INCLUDE_TYPE-FIRST_ELEMENT` ).
  ENDMETHOD.

  METHOD description_too_long.
    DATA temp1796 TYPE zcl_aff_test_types=>type_with_long_description.
    CLEAR temp1796.
    test_generator->generate_type( temp1796 ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_contains_text(
      log                = log
      exp_text           = |Description exceeds { zcl_aff_writer_json_schema=>c_max_length_of_description } characters and might be too long|
      exp_component_name = `TYPE_WITH_LONG_DESCRIPTION`
      exp_type           = zif_aff_log=>c_message_type-warning ).

  ENDMETHOD.

  METHOD get_extrema_integer.
    DATA val TYPE i. "-2147483648 to +2147483647 for i
    DATA temp1797 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp1797 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp1797
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `-2147483648` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `2147483647` act = max ).
  ENDMETHOD.

  METHOD get_extrema_decfloat16.
    DATA val TYPE decfloat16. "1E385(1E-16 - 1) to -1E-383, 0, +1E-383 to 1E385(1 - 1E-16) for decfloat16
    DATA temp1798 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp1798 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp1798
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `-9.999999999999999e384` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `9.999999999999999e384` act = max ).
  ENDMETHOD.

  METHOD get_extrema_ftype.
    DATA val TYPE f. "2.2250738585072014E-308 to 1.7976931348623157E+308, positive as well as negative
    DATA temp1799 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp1799 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp1799
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `-1.7976931348623157e308` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `1.7976931348623157e308` act = max ).
  ENDMETHOD.

  METHOD get_extrema_packed.
    DATA val TYPE p LENGTH 14 DECIMALS 2. "length multiplied by 2 minus 1 digits and can have a maximum of 14 decimal places
    DATA temp1800 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp1800 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp1800
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `-9999999999999999999999999.99` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `9999999999999999999999999.99` act = max ).
  ENDMETHOD.

  METHOD get_extrema_integer1.
    DATA val TYPE int1.
    DATA temp1801 TYPE REF TO cl_abap_elemdescr.
    DATA max TYPE string.
    DATA min TYPE string.
    temp1801 ?= cl_abap_typedescr=>describe_by_data( val ).


    cut->get_extrema(
      EXPORTING
        element_description = temp1801
      IMPORTING
        max                 = max
        min                 = min ).
    cl_abap_unit_assert=>assert_equals( exp = `0` act = min ).
    cl_abap_unit_assert=>assert_equals( exp = `255` act = max ).
  ENDMETHOD.

  METHOD calculate_max_length.
    DATA c_length_30 TYPE c LENGTH 30.
    DATA temp1802 TYPE REF TO cl_abap_elemdescr.
    DATA max_length TYPE string.
    DATA c_length_60 TYPE c LENGTH 60.
    DATA temp1803 TYPE REF TO cl_abap_elemdescr.
    DATA n_length_10 TYPE n LENGTH 10.
    DATA temp1804 TYPE REF TO cl_abap_elemdescr.
    temp1802 ?= cl_abap_typedescr=>describe_by_data( c_length_30 ).

    max_length = cut->get_max_length(
      element_description = temp1802 ).
    cl_abap_unit_assert=>assert_equals( exp = 30 act = max_length ).



    temp1803 ?= cl_abap_typedescr=>describe_by_data( c_length_60 ).
    max_length = cut->get_max_length(
      element_description = temp1803 ).
    cl_abap_unit_assert=>assert_equals( exp = 60 act = max_length ).



    temp1804 ?= cl_abap_typedescr=>describe_by_data( n_length_10 ).
    max_length = cut->get_max_length(
      element_description = temp1804 ).
    cl_abap_unit_assert=>assert_equals( exp = 10 act = max_length ).
  ENDMETHOD.

  METHOD struc_with_own_enum_values.
    DATA temp1805 TYPE zcl_aff_test_types=>struc_with_own_enum_values.
    DATA act_schema TYPE string_table.
    DATA temp1806 TYPE string_table.
    DATA temp190 LIKE LINE OF temp1806.
    DATA temp191 LIKE LINE OF temp1806.
    DATA temp192 LIKE LINE OF temp1806.
    DATA temp1836 LIKE LINE OF temp1806.
    DATA exp_schema LIKE temp1806.
    CLEAR temp1805.

    act_schema = test_generator->generate_type( temp1805 ).

    CLEAR temp1806.
    APPEND `   { ` TO temp1806.

    temp190 = |    "$comment": "This file is autogenerated, do not edit manually, see { zcl_aff_writer_json_schema=>c_link_to_repository } for more information.", |.
    APPEND temp190 TO temp1806.

    temp191 = |    "$schema": "{ zcl_aff_writer_json_schema=>c_schema_specification }",|.
    APPEND temp191 TO temp1806.

    temp192 = |    "$id": "{ schema_id }",|.
    APPEND temp192 TO temp1806.
    APPEND `    "title": "Structure With Overwritten Enum Values", ` TO temp1806.
    APPEND `    "description": "Structure with overwritten enum values", ` TO temp1806.
    APPEND `    "type": "object", ` TO temp1806.
    APPEND `    "properties": { ` TO temp1806.
    APPEND `      "enumComponent": { ` TO temp1806.
    APPEND `        "title": "Enum Component",` TO temp1806.
    APPEND `        "description": "Enum component",` TO temp1806.
    APPEND `        "type": "string", ` TO temp1806.
    APPEND `         "enum": [ ` TO temp1806.
    APPEND `           "AAAA", ` TO temp1806.
    APPEND `           "BBBB" ` TO temp1806.
    APPEND `         ], ` TO temp1806.
    APPEND `         "enumTitles": [ ` TO temp1806.
    APPEND `           "Option 1", ` TO temp1806.
    APPEND `           "Option 2" ` TO temp1806.
    APPEND `         ], ` TO temp1806.
    APPEND `         "enumDescriptions": [ ` TO temp1806.
    APPEND `           "Option 1", ` TO temp1806.
    APPEND `           "Option 2" ` TO temp1806.
    APPEND `         ], ` TO temp1806.
    APPEND `         "default": "AAAA"` TO temp1806.
    APPEND `      } ` TO temp1806.
    APPEND `   }, ` TO temp1806.
    APPEND `   "additionalProperties": false ` TO temp1806.
    APPEND ` } ` TO temp1806.

    APPEND temp1836 TO temp1806.

    exp_schema = temp1806.
    zcl_aff_tools_unit_test_helper=>assert_equals_ignore_spaces( act_data = act_schema exp_data = exp_schema ).
    log = cut->zif_aff_writer~get_log( ).
    zcl_aff_tools_unit_test_helper=>assert_log_has_no_message( log = log message_severity_threshold = zif_aff_log=>c_message_type-info ).
  ENDMETHOD.

ENDCLASS.
